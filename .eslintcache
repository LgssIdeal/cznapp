[{"/home/carlos/work/cznapp/src/App.js":"1","/home/carlos/work/cznapp/src/serviceWorker.js":"2","/home/carlos/work/cznapp/src/index.js":"3","/home/carlos/work/cznapp/src/mixins/chartjs.js":"4","/home/carlos/work/cznapp/src/theme/index.js":"5","/home/carlos/work/cznapp/src/routes.js":"6","/home/carlos/work/cznapp/src/layouts/MainLayout/index.js":"7","/home/carlos/work/cznapp/src/layouts/DashboardLayout/TopBar.js":"8","/home/carlos/work/cznapp/src/views/reports/DashboardView/TotalProfit.js":"9","/home/carlos/work/cznapp/src/views/reports/DashboardView/Budget.js":"10","/home/carlos/work/cznapp/src/layouts/DashboardLayout/NavBar/NavItem.js":"11","/home/carlos/work/cznapp/src/views/customer/CustomerListView/Toolbar.js":"12","/home/carlos/work/cznapp/src/components/GlobalStyles.js":"13","/home/carlos/work/cznapp/src/layouts/DashboardLayout/index.js":"14","/home/carlos/work/cznapp/src/views/customer/CustomerListView/index.js":"15","/home/carlos/work/cznapp/src/views/reports/DashboardView/TotalCustomers.js":"16","/home/carlos/work/cznapp/src/views/reports/DashboardView/LatestOrders.js":"17","/home/carlos/work/cznapp/src/views/account/AccountView/ProfileDetails.js":"18","/home/carlos/work/cznapp/src/views/auth/LoginView.js":"19","/home/carlos/work/cznapp/src/views/settings/SettingsView/Password.js":"20","/home/carlos/work/cznapp/src/views/customer/CustomerListView/data.js":"21","/home/carlos/work/cznapp/src/views/auth/RegisterView.js":"22","/home/carlos/work/cznapp/src/theme/shadows.js":"23","/home/carlos/work/cznapp/src/views/errors/NotFoundView.js":"24","/home/carlos/work/cznapp/src/components/Page.js":"25","/home/carlos/work/cznapp/src/views/account/AccountView/Profile.js":"26","/home/carlos/work/cznapp/src/components/Logo.js":"27","/home/carlos/work/cznapp/src/views/reports/DashboardView/Sales.js":"28","/home/carlos/work/cznapp/src/views/settings/SettingsView/index.js":"29","/home/carlos/work/cznapp/src/icons/Facebook.js":"30","/home/carlos/work/cznapp/src/theme/typography.js":"31","/home/carlos/work/cznapp/src/layouts/MainLayout/TopBar.js":"32","/home/carlos/work/cznapp/src/views/reports/DashboardView/TasksProgress.js":"33","/home/carlos/work/cznapp/src/views/product/ProductListView/index.js":"34","/home/carlos/work/cznapp/src/views/settings/SettingsView/Notifications.js":"35","/home/carlos/work/cznapp/src/views/reports/DashboardView/TrafficByDevice.js":"36","/home/carlos/work/cznapp/src/views/reports/DashboardView/index.js":"37","/home/carlos/work/cznapp/src/views/product/ProductListView/Toolbar.js":"38","/home/carlos/work/cznapp/src/utils/getInitials.js":"39","/home/carlos/work/cznapp/src/layouts/DashboardLayout/NavBar/index.js":"40","/home/carlos/work/cznapp/src/views/product/ProductListView/ProductCard.js":"41","/home/carlos/work/cznapp/src/views/customer/CustomerListView/Results.js":"42","/home/carlos/work/cznapp/src/views/reports/DashboardView/LatestProducts.js":"43","/home/carlos/work/cznapp/src/views/account/AccountView/index.js":"44","/home/carlos/work/cznapp/src/views/product/ProductListView/data.js":"45","/home/carlos/work/cznapp/src/views/user/UserListView/Results.js":"46","/home/carlos/work/cznapp/src/views/user/UserListView/index.js":"47","/home/carlos/work/cznapp/src/views/user/UserListView/Toolbar.js":"48","/home/carlos/work/cznapp/src/views/user/UserFormView/ProfileDetails.js":"49","/home/carlos/work/cznapp/src/views/user/UserFormView/index.js":"50","/home/carlos/work/cznapp/src/views/user/UserFormView/Profile.js":"51","/home/carlos/work/cznapp/src/services/UsuarioService.js":"52","/home/carlos/work/cznapp/src/services/EmpresaService.js":"53","/home/carlos/work/cznapp/src/views/empresa/EmpresaListView/Results.js":"54","/home/carlos/work/cznapp/src/views/empresa/EmpresaListView/Toolbar.js":"55","/home/carlos/work/cznapp/src/views/empresa/EmpresaFormView/ProfileDetails.js":"56","/home/carlos/work/cznapp/src/views/empresa/EmpresaFormView/index.js":"57","/home/carlos/work/cznapp/src/services/EnderecoService.js":"58","/home/carlos/work/cznapp/src/views/cliente/ClienteListView/Results.js":"59","/home/carlos/work/cznapp/src/views/cliente/ClienteFormView/ProfileDetails.js":"60","/home/carlos/work/cznapp/src/views/cliente/ClienteListView/Toolbar.js":"61","/home/carlos/work/cznapp/src/views/unidade/UnidadeListView/Results.js":"62","/home/carlos/work/cznapp/src/views/unidade/UnidadeListView/index.js":"63","/home/carlos/work/cznapp/src/views/cliente/ClienteListView/index.js":"64","/home/carlos/work/cznapp/src/views/unidade/UnidadeListView/Toolbar.js":"65","/home/carlos/work/cznapp/src/views/cliente/ClienteFormView/index.js":"66","/home/carlos/work/cznapp/src/views/unidade/UnidadeFormView/ProfileDetails.js":"67","/home/carlos/work/cznapp/src/services/UnidadeService.js":"68","/home/carlos/work/cznapp/src/views/clinica/ClinicaListView/Results.js":"69","/home/carlos/work/cznapp/src/services/ClinicaService.js":"70","/home/carlos/work/cznapp/src/views/clinica/ClinicaListView/index.js":"71","/home/carlos/work/cznapp/src/views/clinica/ClinicaListView/Toolbar.js":"72","/home/carlos/work/cznapp/src/views/clinica/ClinicaFormView/ProfileDetails.js":"73","/home/carlos/work/cznapp/src/views/clinica/ClinicaFormView/index.js":"74","/home/carlos/work/cznapp/src/services/ClienteService.js":"75","/home/carlos/work/cznapp/src/services/LoginService.js":"76","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaListView/Results.js":"77","/home/carlos/work/cznapp/src/views/empresa/EmpresaListView/index.js":"78","/home/carlos/work/cznapp/src/views/unidade/UnidadeFormView/index.js":"79","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaFormView/ProfileDetails.js":"80","/home/carlos/work/cznapp/src/services/TipoDietaService.js":"81","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaFormView/index.js":"82","/home/carlos/work/cznapp/src/services/TipoDietaComplementarService.js":"83","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarListView/Results.js":"84","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarFormView/ProfileDetails.js":"85","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaListView/index.js":"86","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarListView/Toolbar.js":"87","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaListView/Toolbar.js":"88","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarListView/index.js":"89","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarFormView/index.js":"90","/home/carlos/work/cznapp/src/views/sobre/SobreListView/Results.js":"91","/home/carlos/work/cznapp/src/views/sobre/SobreListView/index.js":"92","/home/carlos/work/cznapp/src/views/contrato/ContratoListView/Results.js":"93","/home/carlos/work/cznapp/src/views/contrato/ContratoFormView/ProfileDetails.js":"94","/home/carlos/work/cznapp/src/views/contrato/ContratoListView/Toolbar.js":"95","/home/carlos/work/cznapp/src/views/contrato/ContratoFormView/index.js":"96","/home/carlos/work/cznapp/src/services/ContratoService.js":"97","/home/carlos/work/cznapp/src/views/errors/NotAuthorizedView.js":"98","/home/carlos/work/cznapp/src/views/mapa/SelecaoClinicaView/ProfileDetails.js":"99","/home/carlos/work/cznapp/src/views/mapa/MapaListView/Toolbar.js":"100","/home/carlos/work/cznapp/src/views/mapa/MapaListView/Results.js":"101","/home/carlos/work/cznapp/src/views/mapa/MapaFormView/ProfileDetails.js":"102","/home/carlos/work/cznapp/src/views/mapa/SelecaoClinicaView/index.js":"103","/home/carlos/work/cznapp/src/services/SobreService.js":"104","/home/carlos/work/cznapp/src/views/mapa/MapaFormView/index.js":"105","/home/carlos/work/cznapp/src/views/contrato/ConfigContratoFormView/ProfileDetails.js":"106","/home/carlos/work/cznapp/src/views/mapa/MapaListView/index.js":"107","/home/carlos/work/cznapp/src/services/RefeicaoContratoService.js":"108","/home/carlos/work/cznapp/src/views/contrato/ConfigContratoFormView/index.js":"109","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoEntFormView/ProfileDetails.js":"110","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoListView/Results.js":"111","/home/carlos/work/cznapp/src/services/SolicitacaoService.js":"112","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoListView/Toolbar.js":"113","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoListView/index.js":"114","/home/carlos/work/cznapp/src/utils/refeicoes.js":"115","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoFormView/ProfileDetails.js":"116","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoFormView/index.js":"117","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemListView/Results.js":"118","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemListView/index.js":"119","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemResumoListView/Results.js":"120","/home/carlos/work/cznapp/src/views/contrato/ContratoListView/index.js":"121","/home/carlos/work/cznapp/src/services/MapaService.js":"122","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemResumoListView/index.js":"123","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemFormView/ProfileDetails.js":"124","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemFormView/index.js":"125"},{"size":516,"mtime":1614639015728,"results":"126","hashOfConfig":"127"},{"size":4953,"mtime":1611671098919,"results":"128","hashOfConfig":"127"},{"size":320,"mtime":1614638774379,"results":"129","hashOfConfig":"127"},{"size":5586,"mtime":1611671098703,"results":"130","hashOfConfig":"127"},{"size":649,"mtime":1616590067798,"results":"131","hashOfConfig":"127"},{"size":5569,"mtime":1616590913235,"results":"132","hashOfConfig":"127"},{"size":1001,"mtime":1611671098679,"results":"133","hashOfConfig":"127"},{"size":2535,"mtime":1614460773319,"results":"134","hashOfConfig":"127"},{"size":1382,"mtime":1611671098799,"results":"135","hashOfConfig":"127"},{"size":2036,"mtime":1611671098791,"results":"136","hashOfConfig":"127"},{"size":1637,"mtime":1611671098671,"results":"137","hashOfConfig":"127"},{"size":1816,"mtime":1611671098787,"results":"138","hashOfConfig":"127"},{"size":672,"mtime":1611671149299,"results":"139","hashOfConfig":"127"},{"size":1343,"mtime":1611671098675,"results":"140","hashOfConfig":"127"},{"size":851,"mtime":1611672589972,"results":"141","hashOfConfig":"127"},{"size":2078,"mtime":1611671098795,"results":"142","hashOfConfig":"127"},{"size":3952,"mtime":1611671098791,"results":"143","hashOfConfig":"127"},{"size":4448,"mtime":1612286926724,"results":"144","hashOfConfig":"127"},{"size":5832,"mtime":1614984719037,"results":"145","hashOfConfig":"127"},{"size":4121,"mtime":1615992099734,"results":"146","hashOfConfig":"127"},{"size":3362,"mtime":1611671098791,"results":"147","hashOfConfig":"127"},{"size":6435,"mtime":1611672548911,"results":"148","hashOfConfig":"127"},{"size":1618,"mtime":1611671098731,"results":"149","hashOfConfig":"127"},{"size":1465,"mtime":1615064429507,"results":"150","hashOfConfig":"127"},{"size":462,"mtime":1611671098615,"results":"151","hashOfConfig":"127"},{"size":1838,"mtime":1611671098787,"results":"152","hashOfConfig":"127"},{"size":211,"mtime":1611707890514,"results":"153","hashOfConfig":"127"},{"size":3288,"mtime":1611671098795,"results":"154","hashOfConfig":"127"},{"size":720,"mtime":1615986103480,"results":"155","hashOfConfig":"127"},{"size":820,"mtime":1611671098647,"results":"156","hashOfConfig":"157"},{"size":544,"mtime":1611671098731,"results":"158","hashOfConfig":"127"},{"size":760,"mtime":1611672177515,"results":"159","hashOfConfig":"127"},{"size":1555,"mtime":1611671098795,"results":"160","hashOfConfig":"127"},{"size":1588,"mtime":1611672356965,"results":"161","hashOfConfig":"127"},{"size":3107,"mtime":1611671098799,"results":"162","hashOfConfig":"127"},{"size":3155,"mtime":1611671098799,"results":"163","hashOfConfig":"127"},{"size":2355,"mtime":1611672391937,"results":"164","hashOfConfig":"127"},{"size":1814,"mtime":1611671098791,"results":"165","hashOfConfig":"127"},{"size":139,"mtime":1611671098759,"results":"166","hashOfConfig":"127"},{"size":4850,"mtime":1615993893995,"results":"167","hashOfConfig":"127"},{"size":2569,"mtime":1611671098791,"results":"168","hashOfConfig":"127"},{"size":5499,"mtime":1612105879024,"results":"169","hashOfConfig":"127"},{"size":2778,"mtime":1611671098791,"results":"170","hashOfConfig":"127"},{"size":1043,"mtime":1612290074284,"results":"171","hashOfConfig":"127"},{"size":1663,"mtime":1611671098791,"results":"172","hashOfConfig":"127"},{"size":9382,"mtime":1615829321112,"results":"173","hashOfConfig":"127"},{"size":912,"mtime":1614642365237,"results":"174","hashOfConfig":"127"},{"size":1349,"mtime":1614648518620,"results":"175","hashOfConfig":"127"},{"size":7112,"mtime":1614649596781,"results":"176","hashOfConfig":"127"},{"size":1983,"mtime":1612911263265,"results":"177","hashOfConfig":"127"},{"size":1749,"mtime":1612372191959,"results":"178","hashOfConfig":"127"},{"size":1215,"mtime":1615991894575,"results":"179","hashOfConfig":"127"},{"size":1985,"mtime":1614970561198,"results":"180","hashOfConfig":"127"},{"size":9059,"mtime":1615828858821,"results":"181","hashOfConfig":"127"},{"size":2115,"mtime":1614648546956,"results":"182","hashOfConfig":"127"},{"size":14168,"mtime":1614969210913,"results":"183","hashOfConfig":"127"},{"size":1734,"mtime":1613350087441,"results":"184","hashOfConfig":"127"},{"size":1049,"mtime":1614533673343,"results":"185","hashOfConfig":"127"},{"size":9437,"mtime":1615828582578,"results":"186","hashOfConfig":"127"},{"size":13906,"mtime":1614695483641,"results":"187","hashOfConfig":"127"},{"size":2090,"mtime":1614648571304,"results":"188","hashOfConfig":"127"},{"size":9023,"mtime":1615829260924,"results":"189","hashOfConfig":"127"},{"size":986,"mtime":1613996660377,"results":"190","hashOfConfig":"127"},{"size":891,"mtime":1613673192355,"results":"191","hashOfConfig":"127"},{"size":2508,"mtime":1614648653275,"results":"192","hashOfConfig":"127"},{"size":1706,"mtime":1613858046362,"results":"193","hashOfConfig":"127"},{"size":4189,"mtime":1614695977565,"results":"194","hashOfConfig":"127"},{"size":1795,"mtime":1615239094649,"results":"195","hashOfConfig":"127"},{"size":8577,"mtime":1615828636674,"results":"196","hashOfConfig":"127"},{"size":1795,"mtime":1615241531204,"results":"197","hashOfConfig":"127"},{"size":1064,"mtime":1614127111693,"results":"198","hashOfConfig":"127"},{"size":2542,"mtime":1614648605336,"results":"199","hashOfConfig":"127"},{"size":4315,"mtime":1614696138334,"results":"200","hashOfConfig":"127"},{"size":2561,"mtime":1614205784052,"results":"201","hashOfConfig":"127"},{"size":1986,"mtime":1614971058399,"results":"202","hashOfConfig":"127"},{"size":345,"mtime":1614259186610,"results":"203","hashOfConfig":"127"},{"size":9138,"mtime":1616118317421,"results":"204","hashOfConfig":"127"},{"size":891,"mtime":1613308315802,"results":"205","hashOfConfig":"127"},{"size":2132,"mtime":1613858302351,"results":"206","hashOfConfig":"127"},{"size":4898,"mtime":1616103959749,"results":"207","hashOfConfig":"127"},{"size":2017,"mtime":1615333542342,"results":"208","hashOfConfig":"127"},{"size":1144,"mtime":1616103206622,"results":"209","hashOfConfig":"127"},{"size":2030,"mtime":1615322805259,"results":"210","hashOfConfig":"127"},{"size":9075,"mtime":1616285494136,"results":"211","hashOfConfig":"127"},{"size":4425,"mtime":1614696603638,"results":"212","hashOfConfig":"127"},{"size":898,"mtime":1614275254487,"results":"213","hashOfConfig":"127"},{"size":2530,"mtime":1614648474896,"results":"214","hashOfConfig":"127"},{"size":2189,"mtime":1614648619783,"results":"215","hashOfConfig":"127"},{"size":1039,"mtime":1614537949129,"results":"216","hashOfConfig":"127"},{"size":2114,"mtime":1614636701130,"results":"217","hashOfConfig":"127"},{"size":3561,"mtime":1615829747913,"results":"218","hashOfConfig":"127"},{"size":764,"mtime":1614706349450,"results":"219","hashOfConfig":"127"},{"size":10219,"mtime":1615828469543,"results":"220","hashOfConfig":"127"},{"size":11601,"mtime":1615385448790,"results":"221","hashOfConfig":"127"},{"size":2117,"mtime":1614975463601,"results":"222","hashOfConfig":"127"},{"size":1490,"mtime":1615320294759,"results":"223","hashOfConfig":"127"},{"size":3121,"mtime":1615664125314,"results":"224","hashOfConfig":"127"},{"size":1531,"mtime":1615134124153,"results":"225","hashOfConfig":"127"},{"size":7116,"mtime":1615721303362,"results":"226","hashOfConfig":"127"},{"size":2494,"mtime":1615319601801,"results":"227","hashOfConfig":"127"},{"size":8310,"mtime":1616596112441,"results":"228","hashOfConfig":"127"},{"size":15444,"mtime":1616286582265,"results":"229","hashOfConfig":"127"},{"size":922,"mtime":1615236739923,"results":"230","hashOfConfig":"127"},{"size":447,"mtime":1614705910482,"results":"231","hashOfConfig":"127"},{"size":1170,"mtime":1615320805254,"results":"232","hashOfConfig":"127"},{"size":18991,"mtime":1615828388392,"results":"233","hashOfConfig":"127"},{"size":976,"mtime":1615250837219,"results":"234","hashOfConfig":"127"},{"size":1831,"mtime":1615479758413,"results":"235","hashOfConfig":"127"},{"size":1038,"mtime":1615387981414,"results":"236","hashOfConfig":"127"},{"size":7136,"mtime":1616115325357,"results":"237","hashOfConfig":"127"},{"size":7256,"mtime":1616714686025,"results":"238","hashOfConfig":"127"},{"size":3004,"mtime":1616702391492,"results":"239","hashOfConfig":"127"},{"size":2683,"mtime":1616276223367,"results":"240","hashOfConfig":"127"},{"size":1207,"mtime":1616115393234,"results":"241","hashOfConfig":"127"},{"size":429,"mtime":1615741949329,"results":"242","hashOfConfig":"127"},{"size":19520,"mtime":1616714095335,"results":"243","hashOfConfig":"127"},{"size":1153,"mtime":1616276621936,"results":"244","hashOfConfig":"127"},{"size":8352,"mtime":1616713106743,"results":"245","hashOfConfig":"127"},{"size":1178,"mtime":1615806991681,"results":"246","hashOfConfig":"127"},{"size":6029,"mtime":1616590634935,"results":"247","hashOfConfig":"127"},{"size":894,"mtime":1614936913362,"results":"248","hashOfConfig":"127"},{"size":1719,"mtime":1615228753563,"results":"249","hashOfConfig":"127"},{"size":1190,"mtime":1616590835659,"results":"250","hashOfConfig":"127"},{"size":16593,"mtime":1616713423445,"results":"251","hashOfConfig":"127"},{"size":1465,"mtime":1616624815292,"results":"252","hashOfConfig":"127"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},"2mcn2c",{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"255"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"275"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},"rvlbyo",{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"289"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"338"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"289"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"371"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"289"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"281"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"343"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"343"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"275"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"278"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"343"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"275"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"284"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"289"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"281"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"278"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"255"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"278"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"289"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"294"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"255"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"275"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"275"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"289"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"284"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"255"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"255"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"449"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"294"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"294"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"275"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"449"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"264"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"294"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"275"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"289"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"278"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"281"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"371"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"371"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"496"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"289"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"343"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"281"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"284"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"264"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"436"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"255"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"255"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"289"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"371"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"289"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"281"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"278"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"289"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"436"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"275"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"281"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"255"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"289"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"561","messages":"562","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"255"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"255"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"281"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"576","messages":"577","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"281"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"255"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"275"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/carlos/work/cznapp/src/App.js",[],["593","594"],"/home/carlos/work/cznapp/src/serviceWorker.js",[],["595","596"],"/home/carlos/work/cznapp/src/index.js",[],["597","598"],"/home/carlos/work/cznapp/src/mixins/chartjs.js",[],["599","600"],"/home/carlos/work/cznapp/src/theme/index.js",[],"/home/carlos/work/cznapp/src/routes.js",[],"/home/carlos/work/cznapp/src/layouts/MainLayout/index.js",[],["601","602"],"/home/carlos/work/cznapp/src/layouts/DashboardLayout/TopBar.js",["603","604","605","606"],"import React, { useState } from 'react';\nimport { Link as RouterLink, Navigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from '../../components/Logo';\nimport {  useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\n\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\"\n            onClick={(() => {\n              let usuario = JSON.parse(localStorage.getItem(\"@app-user\"));\n              //console.log(\"usuario: \", usuario.nome);\n              localStorage.removeItem(\"@app-user\");\n              setUser(null);\n              navigate('/', { replace: true });\n            })}>\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          \n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n          <IconButton color=\"inherit\"\n            onClick={(() => {\n              let usuario = JSON.parse(localStorage.getItem(\"@app-user\"));\n              //console.log(\"usuario: \", usuario.nome);\n              localStorage.removeItem(\"@app-user\");\n              setUser(null);\n              navigate('/', { replace: true });\n            })}>\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n",["607","608"],"/home/carlos/work/cznapp/src/views/reports/DashboardView/TotalProfit.js",[],["609","610"],"/home/carlos/work/cznapp/src/views/reports/DashboardView/Budget.js",[],["611","612"],"/home/carlos/work/cznapp/src/layouts/DashboardLayout/NavBar/NavItem.js",[],["613","614"],"/home/carlos/work/cznapp/src/views/customer/CustomerListView/Toolbar.js",[],"/home/carlos/work/cznapp/src/components/GlobalStyles.js",[],["615","616"],"/home/carlos/work/cznapp/src/layouts/DashboardLayout/index.js",[],"/home/carlos/work/cznapp/src/views/customer/CustomerListView/index.js",[],["617","618"],"/home/carlos/work/cznapp/src/views/reports/DashboardView/TotalCustomers.js",[],"/home/carlos/work/cznapp/src/views/reports/DashboardView/LatestOrders.js",[],"/home/carlos/work/cznapp/src/views/account/AccountView/ProfileDetails.js",[],["619","620"],"/home/carlos/work/cznapp/src/views/auth/LoginView.js",[],"/home/carlos/work/cznapp/src/views/settings/SettingsView/Password.js",["621","622","623"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles,\n  LinearProgress\n} from '@material-ui/core';\nimport {useNavigate} from 'react-router-dom';\nimport {Alert} from '@material-ui/lab';\nimport { invalid } from 'moment';\nimport { CornerDownLeft } from 'react-feather';\nimport UsuarioService from '../../../services/UsuarioService';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n  const [usuarioId, setUsuarioId] = useState(0);\n  const [invalidToken, setInvalidToken] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const [respMsg, setRespMsg] = useState({\n    msg: '',\n    severity: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    if(localStorage.getItem(\"@app-user\") !== null) {\n      setUsuarioId(JSON.parse(localStorage.getItem(\"@app-user\")).id);\n      setInvalidToken(false)\n    } else {\n      setInvalidToken(true);\n    }\n    if(values.confirm === '' && values.password === '') {\n      setConfirmed(false);\n    } else {\n      if(values.confirm !== values.password) {\n        setConfirmed(false);\n      } else {\n        setConfirmed(true);\n      }\n    }\n  }, [values]);\n\n  useEffect(() => {\n    if(invalidToken) {\n      navigate(\"/\", {replace: true});\n    }\n  }, [invalidToken]);\n\n  const doSubmit = () => {\n    setLoading(true);\n    console.log('Senha/Confirmação: ', values.password + '/' + values.confirm);\n    const params = new URLSearchParams();\n    params.append('senha', values.password);\n    params.append('confirmacao', values.confirm);\n    UsuarioService.alteraSenha(params, usuarioId)\n      .then(() => {\n        setRespMsg({\n          msg: 'Senha alterada com sucesso. Você poderá utilizá-la no próximo login.',\n          severity: 'success'\n        });\n      })\n      .catch((error) => {\n        if(error.response) {\n          setRespMsg({\n            msg: error.response.data.detail,\n            severity: 'warning'\n          });\n        } else {\n          var e = JSON.stringify(error);\n          if(e.includes('401')) {\n            setInvalidToken(true);\n          } else {\n            setRespMsg({\n              msg: e,\n              severity: 'error'\n            });\n          }\n        }\n      })\n      .finally(() => setLoading(false))\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Alterar senha\"\n          title=\"Senha\"\n        />\n        <Divider />\n        <CardContent>\n          {loading && <LinearProgress></LinearProgress>}\n          {respMsg.msg && <Alert severity={respMsg.severity}>{respMsg.msg}</Alert>}\n          <TextField\n            fullWidth\n            label=\"Senha\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirmação\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={loading || !confirmed}\n            onClick={doSubmit}\n          >\n            Alterar\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","/home/carlos/work/cznapp/src/views/customer/CustomerListView/data.js",["624"],"import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n",["625","626"],"/home/carlos/work/cznapp/src/views/auth/RegisterView.js",[],"/home/carlos/work/cznapp/src/theme/shadows.js",["627"],"export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","/home/carlos/work/cznapp/src/views/errors/NotFoundView.js",[],"/home/carlos/work/cznapp/src/components/Page.js",[],"/home/carlos/work/cznapp/src/views/account/AccountView/Profile.js",[],"/home/carlos/work/cznapp/src/components/Logo.js",[],["628","629"],"/home/carlos/work/cznapp/src/views/reports/DashboardView/Sales.js",[],["630","631"],"/home/carlos/work/cznapp/src/views/settings/SettingsView/index.js",[],"/home/carlos/work/cznapp/src/icons/Facebook.js",[],["632","633"],"/home/carlos/work/cznapp/src/theme/typography.js",["634"],"export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","/home/carlos/work/cznapp/src/layouts/MainLayout/TopBar.js",[],["635","636"],"/home/carlos/work/cznapp/src/views/reports/DashboardView/TasksProgress.js",[],"/home/carlos/work/cznapp/src/views/product/ProductListView/index.js",[],["637","638"],"/home/carlos/work/cznapp/src/views/settings/SettingsView/Notifications.js",[],"/home/carlos/work/cznapp/src/views/reports/DashboardView/TrafficByDevice.js",[],"/home/carlos/work/cznapp/src/views/reports/DashboardView/index.js",[],"/home/carlos/work/cznapp/src/views/product/ProductListView/Toolbar.js",[],"/home/carlos/work/cznapp/src/utils/getInitials.js",["639"],"export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","/home/carlos/work/cznapp/src/layouts/DashboardLayout/NavBar/index.js",["640","641","642","643","644","645","646","647"],"/home/carlos/work/cznapp/src/views/product/ProductListView/ProductCard.js",[],"/home/carlos/work/cznapp/src/views/customer/CustomerListView/Results.js",[],"/home/carlos/work/cznapp/src/views/reports/DashboardView/LatestProducts.js",[],"/home/carlos/work/cznapp/src/views/account/AccountView/index.js",[],"/home/carlos/work/cznapp/src/views/product/ProductListView/data.js",["648"],"import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    createdAt: '27/03/2019',\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\n    media: '/static/images/products/product_1.png',\n    title: 'Dropbox',\n    totalDownloads: '594'\n  },\n  {\n    id: uuid(),\n    createdAt: '31/03/2019',\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\n    media: '/static/images/products/product_2.png',\n    title: 'Medium Corporation',\n    totalDownloads: '625'\n  },\n  {\n    id: uuid(),\n    createdAt: '03/04/2019',\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\n    media: '/static/images/products/product_3.png',\n    title: 'Slack',\n    totalDownloads: '857'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\n    media: '/static/images/products/product_4.png',\n    title: 'Lyft',\n    totalDownloads: '406'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\n    media: '/static/images/products/product_5.png',\n    title: 'GitHub',\n    totalDownloads: '835'\n  },\n  {\n    id: uuid(),\n    createdAt: '04/04/2019',\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\n    media: '/static/images/products/product_6.png',\n    title: 'Squarespace',\n    totalDownloads: '835'\n  }\n];\n","/home/carlos/work/cznapp/src/views/user/UserListView/Results.js",["649","650","651"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Edit, Delete} from '@material-ui/icons'\nimport getInitials from '../../../utils/getInitials';\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert, alert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport UsuarioService from '../../../services/UsuarioService'\nimport { Alert } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, pageable, ...rest }) => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(true);\n\n  const [selectedUserIds, setSelectedUserIds] = useState([]);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedUserIds;\n\n    if (event.target.checked) {\n      newSelectedUserIds = lpageable.content.map((user) => user.id);\n    } else {\n      newSelectedUserIds = [];\n    }\n\n    setSelectedUserIds(newSelectedUserIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUserIds.indexOf(id);\n    let newSelectedUserIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUserIds = newSelectedUserIds.concat(selectedUserIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUserIds = newSelectedUserIds.concat(selectedUserIds.slice(1));\n    } else if (selectedIndex === selectedUserIds.length - 1) {\n      newSelectedUserIds = newSelectedUserIds.concat(selectedUserIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUserIds = newSelectedUserIds.concat(\n        selectedUserIds.slice(0, selectedIndex),\n        selectedUserIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUserIds(newSelectedUserIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterUser = (idUser) => {\n    console.log(\"User ID: \", idUser);\n    navigate('/app/usuario/' + idUser, {replace : true});\n  }\n\n  const handleDeleteUser = (idUser) => {\n\n    confirmAlert({\n      title: 'Confirmação',\n      message: 'Deseja excluir o usuário?',\n      buttons: [\n        {\n          label:'Sim',\n          onClick: () => {\n\n            UsuarioService.deleteUsuario(idUser)\n              .then((result) => {\n                  \n                confirmAlert({\n                  title: 'Informação',\n                  message: 'Usuário excluído',\n                  buttons: [\n                    {\n                      label: 'Ok',\n                      onClick: () => {\n                        if(reload === 0) {\n                          setReload(1);\n                        } else {\n                          setReload(0);\n                        }\n                      }\n                    }\n                  ]\n                });\n              })\n              .catch((error) => {\n                if(error.data) {\n                  setErrorMsg(error.data);\n                } else {\n                  setTokenExpired(true)\n                }\n                \n            });  \n          }\n        },\n        {\n          label: 'Não',\n          onClick: () => {\n            confirmAlert({\n              title: 'Informação',\n              message: 'Exclusão cancelada',\n              buttons: [\n                {\n                  label: 'Ok',\n                  onClick: () => {}\n                }\n              ]\n            });\n          }\n        }\n      ]\n    });\n      \n  }\n  \n  const map = new Map();\n  map.set(\"ADMINISTRADOR\", \"Administrador\");\n  map.set(\"CORPO_TECNICO\", \"Corpo técnico\");\n  map.set(\"SND\", \"SND\");\n\n\n  useEffect(() => {\n\n    if(JSON.parse(localStorage.getItem(\"@app-user\")).perfil !== 'ADMINISTRADOR') {\n      navigate(\"/app/401\", {}); \n    }\n\n    UsuarioService.getUsuarios(page + 1, limit)\n      .then((result) => {\n        setLpageable(result.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.data) {\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      \n      <PerfectScrollbar>\n        \n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedUserIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedUserIds.length > 0\n                      && selectedUserIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Nome\n                </StyledTableCell>\n                <StyledTableCell>\n                  Perfil\n                </StyledTableCell>\n                <StyledTableCell>\n                  Orgão de classe\n                </StyledTableCell>\n                <StyledTableCell>\n                  Login\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((user) => (\n                <TableRow\n                  hover\n                  key={user.id}\n                  selected={selectedUserIds.indexOf(user.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUserIds.indexOf(user.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, user.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Avatar\n                        className={classes.avatar}\n                        src={'https://www.gravatar.com/avatar/default?s=200&r=pg&d=mm'}\n                      >\n                        {getInitials(user.nome)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {user.nome}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {map.get(user.perfil)}\n                  </TableCell>\n                  <TableCell>\n                    {user.orgaoClasse}\n                  </TableCell>\n                  <TableCell>\n                    {user.login}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        aria-label=\"Editar usuário\"\n                        onClick={(event) => handleAlterUser(user.id)}>\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"Excluir usuário\" color=\"secondary\"\n                        onClick={(event) => handleDeleteUser(user.id)}>\n                          <Delete />\n                        </IconButton>\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n",["652","653"],"/home/carlos/work/cznapp/src/views/user/UserListView/index.js",["654","655","656","657","658"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  LinearProgress\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n\nconst UserListView = () => {\n\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n  return (\n    <Page\n      className={classes.root}\n      title=\"Usuários\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          \n          <Results pageable={pageable}/>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default UserListView;\n","/home/carlos/work/cznapp/src/views/user/UserListView/Toolbar.js",["659","660","661","662","663","664"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, userSel, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    navigate('/app/usuario/' + 0, {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      \n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n            >\n              Novo\n            </Button>\n          </Grid>\n        </Grid>\n        \n      </Box>\n      \n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/user/UserFormView/ProfileDetails.js",[],"/home/carlos/work/cznapp/src/views/user/UserFormView/index.js",["665","666","667"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst UserFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const nUser = {\n    id : '',\n    nome : '',\n    perfil : '',\n    login : '',\n    email : ''\n  }\n\n  const[userSel, setUserSel] = useState(nUser);\n  const[paramUserId, setParamUserId] = useState('');\n  \n  let {userId}  = useParams();\n\n  useEffect(() => {\n    const auth = {\n      headers : {\n          \"Authorization\" : 'Bearer ' + JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken\n      }\n    }\n\n    axios.get(process.env.REACT_APP_API_URL + '/usuarios/' + userId, auth)\n        .then((result) => {\n            setUserSel(result.data)\n        })\n        .catch((error) => {\n            setErrorMsg(error.data);\n            \n        });\n        \n  }, [userId]);\n\n  //setParamUserId(userId);\n\n  //console.log(\"UserID: \", userId);\n\n  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro do usuário\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile userSel={userSel}/>\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails userSel={userSel}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default UserFormView;\n","/home/carlos/work/cznapp/src/views/user/UserFormView/Profile.js",["668","669"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Los Angeles',\n  country: 'USA',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith',\n  timezone: 'GTM-7'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, userSel, ...rest }) => {\n  const classes = useStyles();\n\n  //console.log(\"User selecionado: \", userSel);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={'https://www.gravatar.com/avatar/default?s=200&r=pg&d=mm'}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {userSel.nome}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            \n          </Typography>\n          \n        </Box>\n      </CardContent>\n      <Divider />\n      \n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"contained\"\n          disabled={userSel.id === ''}\n        >\n          Alterar foto\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/home/carlos/work/cznapp/src/services/UsuarioService.js",["670"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getUsuarios: (page, size) => \n    instance({\n      'method' : 'GET',\n      'url' : '/usuarios', \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n  }),\n  deleteUsuario: (idUsuario) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/usuarios/' + idUsuario,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  alteraSenha: (data, usuarioId) =>\n    instance({\n      'method': 'POST',\n      'url': '/usuarios/altsenha/' + usuarioId,\n      'data': data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : ''),\n        'Content-Type' : 'application/x-www-form-urlencoded'\n      }\n    })\n}","/home/carlos/work/cznapp/src/services/EmpresaService.js",["671"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getEmpresas: (page, size) => \n    instance({\n      'method' : 'GET',\n      'url' : '/empresas', \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getEmpresa: (empresaId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/empresas/' + empresaId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteEmpresa: (idUsuario) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/empresas/' + idUsuario,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaEmpresa: (data) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/empresas',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  alteraEmpresa: (data) =>\n    instance({\n      'method' : 'PUT',\n      'url' : '/empresas',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n    getEmpresasList : () => \n    instance({\n      'method' : 'GET',\n      'url' : '/empresas',\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}","/home/carlos/work/cznapp/src/views/empresa/EmpresaListView/Results.js",["672","673"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Edit, Delete} from '@material-ui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport EmpresaService from '../../../services/EmpresaService'\nimport { Alert } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, pageable, ...rest }) => {\n  const classes = useStyles();\n  const [selectedEmpresaIds, setSelectedEmpresaIds] = useState([]);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedEmpresaIds;\n\n    if (event.target.checked) {\n      newSelectedEmpresaIds = lpageable.content.map((empresa) => empresa.id);\n    } else {\n      newSelectedEmpresaIds = [];\n    }\n\n    setSelectedEmpresaIds(newSelectedEmpresaIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedEmpresaIds.indexOf(id);\n    let newSelectedEmpresaIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedEmpresaIds = newSelectedEmpresaIds.concat(selectedEmpresaIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedEmpresaIds = newSelectedEmpresaIds.concat(selectedEmpresaIds.slice(1));\n    } else if (selectedIndex === selectedEmpresaIds.length - 1) {\n      newSelectedEmpresaIds = newSelectedEmpresaIds.concat(selectedEmpresaIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedEmpresaIds = newSelectedEmpresaIds.concat(\n        selectedEmpresaIds.slice(0, selectedIndex),\n        selectedEmpresaIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedEmpresaIds(newSelectedEmpresaIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterEmpresa = (idEmpresa) => {\n    console.log(\"Empresa ID: \", idEmpresa);\n    navigate('/app/empresa/' + idEmpresa, {replace : true});\n  }\n\n  const handleDeleteEmpresa = (idEmpresa) => {\n\n    confirmAlert({\n      title: 'Confirmação',\n      message: 'Deseja excluir a empresa?',\n      buttons: [\n        {\n          label:'Sim',\n          onClick: () => {\n\n            EmpresaService.deleteEmpresa(idEmpresa)\n              .then((result) => {\n                  \n                confirmAlert({\n                  title: 'Informação',\n                  message: 'Empresa excluída',\n                  buttons: [\n                    {\n                      label: 'Ok',\n                      onClick: () => {\n                        if(reload === 0) {\n                          setReload(1);\n                        } else {\n                          setReload(0);\n                        }\n                      }\n                    }\n                  ]\n                });\n              })\n              .catch((error) => {\n                if(error.data) {\n                  setErrorMsg(error.data);\n                } else {\n                  setTokenExpired(true)\n                }\n                \n            });  \n          }\n        },\n        {\n          label: 'Não',\n          onClick: () => {\n            confirmAlert({\n              title: 'Informação',\n              message: 'Exclusão cancelada',\n              buttons: [\n                {\n                  label: 'Ok',\n                  onClick: () => {}\n                }\n              ]\n            });\n          }\n        }\n      ]\n    });\n      \n  }\n  \n\n  useEffect(() => {\n\n    if(JSON.parse(localStorage.getItem(\"@app-user\")).perfil !== 'ADMINISTRADOR') {\n      navigate(\"/app/401\", {}); \n    }\n\n    EmpresaService.getEmpresas(page + 1, limit)\n      .then((result) => {\n        setLoading(false);\n        setLpageable(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.data) {\n          console.log(error.request);\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedEmpresaIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedEmpresaIds.length > 0\n                      && selectedEmpresaIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Razão Social\n                </StyledTableCell>\n                <StyledTableCell>\n                  Fantasia\n                </StyledTableCell>\n                <StyledTableCell>\n                  CNPJ\n                </StyledTableCell>\n                <StyledTableCell>\n                  IE\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((empresa) => (\n                <TableRow\n                  hover\n                  key={empresa.id}\n                  selected={selectedEmpresaIds.indexOf(empresa.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedEmpresaIds.indexOf(empresa.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, empresa.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {empresa.razaoSocial}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {empresa.fantasia}\n                  </TableCell>\n                  <TableCell>\n                    {empresa.documento}\n                  </TableCell>\n                  <TableCell>\n                    {empresa.ie}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        aria-label=\"Editar empresa\"\n                        onClick={(event) => handleAlterEmpresa(empresa.id)}>\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"Excluir empresa\" color=\"secondary\"\n                        onClick={(event) => handleDeleteEmpresa(empresa.id)}>\n                          <Delete />\n                      </IconButton>\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/views/empresa/EmpresaListView/Toolbar.js",["674","675","676","677","678","679"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, userSel, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    navigate('/app/empresa/' + 0, {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleClick}\n              >\n                Novo\n              </Button>\n            </Grid>\n        </Grid>\n        \n      </Box>\n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/empresa/EmpresaFormView/ProfileDetails.js",["680","681","682","683"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  LinearProgress,\n  CircularProgress\n} from '@material-ui/core';\nimport { confirmAlert } from 'react-confirm-alert';\nimport {Alert} from '@material-ui/lab';\nimport axios from 'axios';\nimport {MaskedInput} from 'react-text-mask';\nimport EmpresaService from '../../../services/EmpresaService';\nimport EnderecoService from '../../../services/EnderecoService';\n/*\nconst states = [\n  {\n    value: '',\n    label: ''\n  },\n  {\n    value: 'ADMINISTRADOR',\n    label: 'Administrador'\n  },\n  {\n    value: 'CORPO_TECNICO',\n    label: 'Corpo técnico'\n  },\n  {\n    value: 'SND',\n    label: 'SND'\n  }\n];\n*/\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, empresaSel, ...rest }) => {\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\")\n  const [enderecoPorCep, setEnderecoPorCep] = useState({\n    cep: '',\n    logradouro: '',\n    complemento: '',\n    bairro: '',\n    localidade: '',\n    uf: '',\n    unidade: null,\n    ibge: '',\n    gia: '',\n    erro: null,\n    id: 0\n  });\n  const [values, setValues] = useState({\n    id : empresaSel.id,\n    documento : empresaSel.documento,\n    razaoSocial : empresaSel.razaoSocial,\n    fantasia : empresaSel.fantasia,\n    ie : empresaSel.ie,\n    logradouro : empresaSel.logradouro,\n    numero : empresaSel.numero,\n    complemento : empresaSel.complemento,\n    bairro : empresaSel.bairro,\n    cidade : empresaSel.cidade,\n    codIbge : empresaSel.codIbge,\n    uf : empresaSel.uf,\n    cep : empresaSel.cep,\n    fone1 : empresaSel.fone1,\n    fone2 : empresaSel.fone2\n  });\n\n  useEffect(() => {\n    setValues({\n      id : values.id,\n      documento : values.documento,\n      razaoSocial : values.razaoSocial,\n      fantasia : values.fantasia,\n      ie : values.ie,\n      numero : values.numero,\n      complemento : values.complemento,\n      cep : values.cep,\n      fone1 : values.fone1,\n      fone2 : values.fone2,\n      logradouro : enderecoPorCep.logradouro,\n      uf : enderecoPorCep.uf,\n      cidade : enderecoPorCep.localidade,\n      bairro : enderecoPorCep.bairro,\n      codIbge : enderecoPorCep.ibge\n    })\n    \n  },[enderecoPorCep])\n\n  useEffect(() => {\n    setValues({\n      id : empresaSel.id,\n      documento : empresaSel.documento,\n      razaoSocial : empresaSel.razaoSocial,\n      fantasia : empresaSel.fantasia,\n      ie : empresaSel.ie,\n      logradouro : empresaSel.logradouro,\n      numero : empresaSel.numero,\n      complemento : empresaSel.complemento,\n      bairro : empresaSel.bairro,\n      cidade : empresaSel.cidade,\n      codIbge : empresaSel.codIbge,\n      uf : empresaSel.uf,\n      cep : empresaSel.cep,\n      fone1 : empresaSel.fone1,\n      fone2 : empresaSel.fone2\n    });    \n  }, [empresaSel]);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleCepBlur = () => {\n    setLoading(true);\n    EnderecoService.getEnderecoPelocep(values.cep)\n      .then((result) => {\n        const data= {\n          cep: result.data.cep,\n          logradouro: result.data.logradouro,\n          complemento: result.data.complemento,\n          bairro: result.data.bairro,\n          localidade: result.data.localidade,\n          uf: result.data.uf,\n          unidade: result.data.unidade,\n          ibge: result.data.ibge,\n          gia: result.data.gia,\n          erro: result.data.erro,\n          id: result.data.id\n        };\n        setEnderecoPorCep(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.response.data.detail);\n      });\n  }\n\n  const handleGoBack = (() => {\n    navigate('/app/empresas', {replace : true});\n  });\n\n  const handleSubmit = ( () => {\n    setLoading(true);\n    const data = {\n      id : values.id,\n      documento : values.documento,\n      razaoSocial : values.razaoSocial,\n      fantasia : values.fantasia,\n      ie : values.ie,\n      logradouro : values.logradouro,\n      numero : values.numero,\n      complemento : values.complemento,\n      bairro : values.bairro,\n      cidade : values.cidade,\n      codIbge : values.codIbge,\n      uf : values.uf,\n      cep : values.cep,\n      fone1 : values.fone1,\n      fone2 : values.fone2\n    }\n\n    const json = JSON.stringify(data);\n\n    EmpresaService.criaEmpresa(json)\n      .then((result) => {\n        alert(\"Empresa gravada com sucesso.\");\n        setLoading(false);\n        navigate(\"/app/empresas\", {replace : true});\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.response.data.detail);\n      });\n        \n  } );\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Informe os dados e clique no botão salvar.\"\n          title=\"Cadastro da empresa\"\n        />\n        {error && \n                  <Alert severity=\"error\">{error}</Alert>}\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField type=\"hidden\" name=\"id\" value={values.id}></TextField>\n              <TextField\n                fullWidth\n                helperText=\"Informe a razão social da empresa\"\n                label=\"Razão social\"\n                name=\"razaoSocial\"\n                onChange={handleChange}\n                required\n                value={values.razaoSocial}\n                variant=\"outlined\"\n                \n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Fantasia\"\n                name=\"fantasia\"\n                helperText=\"Informe o nome fantasia\"\n                onChange={handleChange}\n                value={values.fantasia}\n                variant=\"outlined\"\n              />\n            </Grid>\n            \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"CNPJ\"\n                name=\"documento\"\n                helperText=\"Informe o CNPJ da empresa\"\n                onChange={handleChange}\n                required\n                value={values.documento}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"IE\"\n                name=\"ie\"\n                helperText=\"Informe a inscrição estadual\"\n                onChange={handleChange}\n                value={values.ie}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"CEP\"\n                name=\"cep\"\n                required\n                helperText=\"Informe o CEP\"\n                onChange={handleChange}\n                onBlur={handleCepBlur}\n                value={values.cep}\n                variant=\"outlined\"\n              >\n              </TextField>\n              {loading && \n                <CircularProgress size={20}></CircularProgress>}  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Endereço\"\n                name=\"endereco\"\n                required\n                helperText=\"Informe o endereço\"\n                onChange={handleChange}\n                value={values.logradouro}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Número\"\n                name=\"numero\"\n                required\n                helperText=\"Informe o númerp\"\n                onChange={handleChange}\n                value={values.numero}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Complemento\"\n                name=\"complemento\"\n                helperText=\"Informe o complemento\"\n                onChange={handleChange}\n                value={values.complemento}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Bairro\"\n                name=\"bairro\"\n                required\n                helperText=\"Informe o bairro\"\n                onChange={handleChange}\n                value={values.bairro}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Cidade\"\n                name=\"cidade\"\n                required\n                helperText=\"Informe a cidade\"\n                onChange={handleChange}\n                value={values.cidade}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Estado\"\n                name=\"estado\"\n                required\n                helperText=\"Informe o estado\"\n                onChange={handleChange}\n                value={values.uf}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Código IBGE\"\n                name=\"ibge\"\n                required\n                helperText=\"Informe código IBGE\"\n                onChange={handleChange}\n                value={values.codIbge}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Fone 1\"\n                name=\"fone1\"\n                helperText=\"Informe telefone 1\"\n                onChange={handleChange}\n                value={values.fone1}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Fone 2\"\n                name=\"fone2\"\n                helperText=\"Informe o telefone 2\"\n                onChange={handleChange}\n                value={values.fone2}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            { /*\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Informe o perfil\"\n                name=\"perfil\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.perfil}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Orgão de classe\"\n                name=\"orgaoClasse\"\n                helperText=\"Informe o conselho de classe e nro. de registro\"\n                onChange={handleChange}\n                value={values.orgaoClasse}\n                variant=\"outlined\"\n              />\n            </Grid>\n            */}\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Grid\n              item\n              md={6}\n              xs={12}\n            >\n            <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n          >\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Gravar\n            </Button>\n            <Button\n              onClick={handleGoBack}\n              variant=\"contained\"\n            >\n              Cancelar\n            </Button>\n          </Box>\n        </Grid>\n        {loading && \n          <LinearProgress></LinearProgress>}\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","/home/carlos/work/cznapp/src/views/empresa/EmpresaFormView/index.js",["684","685"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport EmpresaService from '../../../services/EmpresaService'\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst EmpresaFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const nEmpresa = {\n    id : '',\n    documento : '',\n    razaoSocial : '',\n    fantasia : '',\n    ie : '',\n    logradouro : '',\n    numero : '',\n    complemento : '',\n    bairro : '',\n    cidade : '',\n    codIbge : '',\n    uf : '',\n    cep : '',\n    fone1 : '',\n    fone2 : ''\n  }\n\n  const[empresaSel, setEmpresaSel] = useState(nEmpresa);\n  \n  let {empresaId}  = useParams();\n\n  useEffect(() => {\n    EmpresaService.getEmpresa(empresaId)\n      .then((result) => {\n        setEmpresaSel(result.data)\n      })\n      .catch((error) => {\n        setErrorMsg(error.data);\n        \n      });    \n  }, [empresaId]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro do usuário\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails empresaSel={empresaSel}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default EmpresaFormView;\n","/home/carlos/work/cznapp/src/services/EnderecoService.js",["686"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getEstados: () =>\n    instance({\n      'method' : 'GET',\n      'url' : '/enderecos/estados',\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getCidades: (codEstado) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/enderecos/cidades/' + codEstado,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getEnderecoPelocep: (cep) => \n    instance({\n      'method' : 'GET',\n      'url' : '/enderecos/cep/' + cep,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n}","/home/carlos/work/cznapp/src/views/cliente/ClienteListView/Results.js",["687","688","689"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Edit, Delete, Apartment} from '@material-ui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport ClienteService from '../../../services/ClienteService'\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, pageable, ...rest }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [selectedClienteIds, setSelectedClienteIds] = useState([]);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedClienteIds;\n\n    if (event.target.checked) {\n      newSelectedClienteIds = lpageable.content.map((cliente) => cliente.id);\n    } else {\n      newSelectedClienteIds = [];\n    }\n\n    setSelectedClienteIds(newSelectedClienteIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedClienteIds.indexOf(id);\n    let newSelectedClienteIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedClienteIds = newSelectedClienteIds.concat(selectedClienteIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedClienteIds = newSelectedClienteIds.concat(selectedClienteIds.slice(1));\n    } else if (selectedIndex === selectedClienteIds.length - 1) {\n      newSelectedClienteIds = newSelectedClienteIds.concat(selectedClienteIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedClienteIds = newSelectedClienteIds.concat(\n        selectedClienteIds.slice(0, selectedIndex),\n        selectedClienteIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedClienteIds(newSelectedClienteIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterCliente = (idCliente) => {\n    console.log(\"Cliente ID: \", idCliente);\n    navigate('/app/cliente/' + idCliente, {replace : true});\n  }\n\n  const handleDeleteCliente = (idCliente) => {\n\n    confirmAlert({\n      title: 'Confirmação',\n      message: 'Deseja excluir o cliente?',\n      buttons: [\n        {\n          label:'Sim',\n          onClick: () => {\n\n            ClienteService.deleteCliente(idCliente)\n              .then((result) => {\n                  \n                confirmAlert({\n                  title: 'Informação',\n                  message: 'Cliente excluído',\n                  buttons: [\n                    {\n                      label: 'Ok',\n                      onClick: () => {\n                        if(reload === 0) {\n                          setReload(1);\n                        } else {\n                          setReload(0);\n                        }\n                      }\n                    }\n                  ]\n                });\n              })\n              .catch((error) => {\n                if(error.data) {\n                  setErrorMsg(error.data);\n                } else {\n                  setTokenExpired(true)\n                }\n                \n            });  \n          }\n        },\n        {\n          label: 'Não',\n          onClick: () => {\n            confirmAlert({\n              title: 'Informação',\n              message: 'Exclusão cancelada',\n              buttons: [\n                {\n                  label: 'Ok',\n                  onClick: () => {}\n                }\n              ]\n            });\n          }\n        }\n      ]\n    });\n      \n  }\n  \n  const handleNavigateToUnidade = ( (idCliente) => {\n    navigate(\"/app/unidades/cliente/\" + idCliente, {});\n  });\n\n  useEffect(() => {\n\n    if(JSON.parse(localStorage.getItem(\"@app-user\")).perfil !== 'ADMINISTRADOR') {\n      navigate(\"/app/401\", {}); \n    }\n\n    ClienteService.getClientes(page + 1, limit)\n      .then((result) => {\n        setLoading(false);\n        setLpageable(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.data) {\n          console.log(error.request);\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedClienteIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedClienteIds.length > 0\n                      && selectedClienteIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Razão Social\n                </StyledTableCell>\n                <StyledTableCell>\n                  Fantasia\n                </StyledTableCell>\n                <StyledTableCell>\n                  CNPJ\n                </StyledTableCell>\n                <StyledTableCell>\n                  IE\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((cliente) => (\n                <TableRow\n                  hover\n                  key={cliente.id}\n                  selected={selectedClienteIds.indexOf(cliente.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedClienteIds.indexOf(cliente.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, cliente.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {cliente.razaoSocial}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {cliente.fantasia}\n                  </TableCell>\n                  <TableCell>\n                    {cliente.documento}\n                  </TableCell>\n                  <TableCell>\n                    {cliente.ie}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        title=\"Editar cliente\"\n                        onClick={(event) => handleAlterCliente(cliente.id)}>\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                      <IconButton\n                        title=\"Excluir cliente\" color=\"secondary\"\n                        onClick={(event) => handleDeleteCliente(cliente.id)}>\n                          <Delete />\n                      </IconButton>\n                      <IconButton\n                        color=\"primary\"\n                        onClick={(event) => handleNavigateToUnidade(cliente.id)}\n                      >\n                        <Apartment />\n                      </IconButton>\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/views/cliente/ClienteFormView/ProfileDetails.js",["690","691"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  LinearProgress,\n  CircularProgress\n} from '@material-ui/core';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Alert} from '@material-ui/lab';\nimport ClienteService from '../../../services/ClienteService';\nimport EnderecoService from '../../../services/EnderecoService';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, clienteSel, ...rest }) => {\n\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n  const [error, setError] = useState(\"\")\n  const [enderecoPorCep, setEnderecoPorCep] = useState({\n    cep: '',\n    logradouro: '',\n    complemento: '',\n    bairro: '',\n    localidade: '',\n    uf: '',\n    unidade: null,\n    ibge: '',\n    gia: '',\n    erro: null,\n    id: 0\n  });\n  const [values, setValues] = useState({\n    id : clienteSel.id,\n    documento : clienteSel.documento,\n    razaoSocial : clienteSel.razaoSocial,\n    fantasia : clienteSel.fantasia,\n    ie : clienteSel.ie,\n    logradouro : clienteSel.logradouro,\n    numero : clienteSel.numero,\n    complemento : clienteSel.complemento,\n    bairro : clienteSel.bairro,\n    cidade : clienteSel.cidade,\n    codIbge : clienteSel.codIbge,\n    uf : clienteSel.uf,\n    cep : clienteSel.cep,\n    fone1 : clienteSel.fone1,\n    fone2 : clienteSel.fone2\n  });\n\n  useEffect(() => {\n    setValues({\n      id : values.id,\n      documento : values.documento,\n      razaoSocial : values.razaoSocial,\n      fantasia : values.fantasia,\n      ie : values.ie,\n      numero : values.numero,\n      complemento : values.complemento,\n      cep : values.cep,\n      fone1 : values.fone1,\n      fone2 : values.fone2,\n      logradouro : enderecoPorCep.logradouro,\n      uf : enderecoPorCep.uf,\n      cidade : enderecoPorCep.localidade,\n      bairro : enderecoPorCep.bairro,\n      codIbge : enderecoPorCep.ibge\n    })\n    \n  },[enderecoPorCep])\n\n  useEffect(() => {\n    setValues({\n      id : clienteSel.id,\n      documento : clienteSel.documento,\n      razaoSocial : clienteSel.razaoSocial,\n      fantasia : clienteSel.fantasia,\n      ie : clienteSel.ie,\n      logradouro : clienteSel.logradouro,\n      numero : clienteSel.numero,\n      complemento : clienteSel.complemento,\n      bairro : clienteSel.bairro,\n      cidade : clienteSel.cidade,\n      codIbge : clienteSel.codIbge,\n      uf : clienteSel.uf,\n      cep : clienteSel.cep,\n      fone1 : clienteSel.fone1,\n      fone2 : clienteSel.fone2\n    });    \n  }, [clienteSel]);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleCepBlur = () => {\n    setLoading(true)\n    EnderecoService.getEnderecoPelocep(values.cep)\n      .then((result) => {\n        const data= {\n          cep: result.data.cep,\n          logradouro: result.data.logradouro,\n          complemento: result.data.complemento,\n          bairro: result.data.bairro,\n          localidade: result.data.localidade,\n          uf: result.data.uf,\n          unidade: result.data.unidade,\n          ibge: result.data.ibge,\n          gia: result.data.gia,\n          erro: result.data.erro,\n          id: result.data.id\n        };\n        setEnderecoPorCep(data);\n        setLoading(false)\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.response.data.detail);\n      });\n  }\n\n  const handleGoBack = (() => {\n    navigate('/app/clientes', {replace : true});\n  });\n\n  const handleSubmit = ( () => {\n\n    const data = {\n      id : values.id,\n      documento : values.documento,\n      razaoSocial : values.razaoSocial,\n      fantasia : values.fantasia,\n      ie : values.ie,\n      logradouro : values.logradouro,\n      numero : values.numero,\n      complemento : values.complemento,\n      bairro : values.bairro,\n      cidade : values.cidade,\n      codIbge : values.codIbge,\n      uf : values.uf,\n      cep : values.cep,\n      fone1 : values.fone1,\n      fone2 : values.fone2\n    }\n\n    const json = JSON.stringify(data);\n    setLoading(true)\n    ClienteService.criaCliente(json)\n      .then((result) => {\n        setLoading(false);\n        alert(\"Cliente gravado com sucesso.\");\n        navigate(\"/app/clientes\", {replace : true});\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.response.data.detail);\n      });\n        \n  } );\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Informe os dados e clique no botão salvar.\"\n          title=\"Cadastro do cliente\"\n        />\n        {error && \n                  <Alert severity=\"error\">{error}</Alert>}\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField type=\"hidden\" name=\"id\" value={values.id}></TextField>\n              <TextField\n                fullWidth\n                helperText=\"Informe a razão social da cliente\"\n                label=\"Razão social\"\n                name=\"razaoSocial\"\n                onChange={handleChange}\n                required\n                value={values.razaoSocial}\n                variant=\"outlined\"\n                \n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Fantasia\"\n                name=\"fantasia\"\n                helperText=\"Informe o nome fantasia\"\n                onChange={handleChange}\n                value={values.fantasia}\n                variant=\"outlined\"\n              />\n            </Grid>\n            \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"CNPJ\"\n                name=\"documento\"\n                helperText=\"Informe o CNPJ do cliente\"\n                onChange={handleChange}\n                required\n                value={values.documento}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"IE\"\n                name=\"ie\"\n                helperText=\"Informe a inscrição estadual\"\n                onChange={handleChange}\n                value={values.ie}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"CEP\"\n                name=\"cep\"\n                required\n                helperText=\"Informe o CEP\"\n                onChange={handleChange}\n                onBlur={handleCepBlur}\n                value={values.cep}\n                variant=\"outlined\"\n              >\n                \n              </TextField>\n               {loading && \n                  <CircularProgress size={20}></CircularProgress>  }\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Endereço\"\n                name=\"endereco\"\n                required\n                helperText=\"Informe o endereço\"\n                onChange={handleChange}\n                value={values.logradouro}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Número\"\n                name=\"numero\"\n                required\n                helperText=\"Informe o númerp\"\n                onChange={handleChange}\n                value={values.numero}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Complemento\"\n                name=\"complemento\"\n                helperText=\"Informe o complemento\"\n                onChange={handleChange}\n                value={values.complemento}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Bairro\"\n                name=\"bairro\"\n                required\n                helperText=\"Informe o bairro\"\n                onChange={handleChange}\n                value={values.bairro}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Cidade\"\n                name=\"cidade\"\n                required\n                helperText=\"Informe a cidade\"\n                onChange={handleChange}\n                value={values.cidade}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Estado\"\n                name=\"estado\"\n                required\n                helperText=\"Informe o estado\"\n                onChange={handleChange}\n                value={values.uf}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Código IBGE\"\n                name=\"ibge\"\n                required\n                helperText=\"Informe código IBGE\"\n                onChange={handleChange}\n                value={values.codIbge}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Fone 1\"\n                name=\"fone1\"\n                helperText=\"Informe telefone 1\"\n                onChange={handleChange}\n                value={values.fone1}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                label=\"Fone 2\"\n                name=\"fone2\"\n                helperText=\"Informe o telefone 2\"\n                onChange={handleChange}\n                value={values.fone2}\n                variant=\"outlined\"\n              >\n              </TextField>  \n            </Grid>\n            { /*\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Informe o perfil\"\n                name=\"perfil\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.perfil}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            \n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Orgão de classe\"\n                name=\"orgaoClasse\"\n                helperText=\"Informe o conselho de classe e nro. de registro\"\n                onChange={handleChange}\n                value={values.orgaoClasse}\n                variant=\"outlined\"\n              />\n            </Grid>\n            */}\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Grid\n          container\n          spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            {'          '}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n              disabled={loading}>\n              Gravar\n            </Button>\n            {'          '}\n            <Button\n              onClick={handleGoBack}\n              variant=\"contained\"\n              disabled={loading}\n            >\n              Cancelar\n            </Button>\n\n        </Grid>\n        </Grid>\n        {loading &&\n              <LinearProgress />}\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","/home/carlos/work/cznapp/src/views/cliente/ClienteListView/Toolbar.js",["692","693","694","695","696","697"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, userSel, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    navigate('/app/cliente/' + 0, {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n            >\n              Novo\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/unidade/UnidadeListView/Results.js",["698","699","700"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Edit, Delete, AccountTree} from '@material-ui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport UnidadeService from '../../../services/UnidadeService';\nimport {useParams} from 'react-router-dom';\nimport {Alert} from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, pageable, ...rest }) => {\n  let {clienteId}  = useParams();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [selectedUnidadeIds, setSelectedUnidadeIds] = useState([]);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedUnidadeIds;\n\n    if (event.target.checked) {\n      newSelectedUnidadeIds = lpageable.content.map((unidade) => unidade.id);\n    } else {\n      newSelectedUnidadeIds = [];\n    }\n\n    setSelectedUnidadeIds(newSelectedUnidadeIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedUnidadeIds.indexOf(id);\n    let newSelectedUnidadeIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUnidadeIds = newSelectedUnidadeIds.concat(selectedUnidadeIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUnidadeIds = newSelectedUnidadeIds.concat(selectedUnidadeIds.slice(1));\n    } else if (selectedIndex === selectedUnidadeIds.length - 1) {\n      newSelectedUnidadeIds = newSelectedUnidadeIds.concat(selectedUnidadeIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUnidadeIds = newSelectedUnidadeIds.concat(\n        selectedUnidadeIds.slice(0, selectedIndex),\n        selectedUnidadeIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedUnidadeIds(newSelectedUnidadeIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterUnidade = (idUnidade) => {\n    navigate('/app/unidades/cliente/' + clienteId + '/' + idUnidade, {replace : true});\n  }\n\n  const handleNavegarToClinicas = (unidadeId) => {\n    navigate('/app/clinicas/' + clienteId + '/' + unidadeId, {replace : true});\n  }\n\n  const handleDeleteUnidade = (idUnidade) => {\n\n    confirmAlert({\n      title: 'Confirmação',\n      message: 'Deseja excluir a unidade?',\n      buttons: [\n        {\n          label:'Sim',\n          onClick: () => {\n\n            UnidadeService.deleteUnidade(idUnidade)\n              .then((result) => {\n                  \n                confirmAlert({\n                  title: 'Informação',\n                  message: 'Unidade excluída',\n                  buttons: [\n                    {\n                      label: 'Ok',\n                      onClick: () => {\n                        if(reload === 0) {\n                          setReload(1);\n                        } else {\n                          setReload(0);\n                        }\n                      }\n                    }\n                  ]\n                });\n              })\n              .catch((error) => {\n                if(error.data) {\n                  setErrorMsg(error.data);\n                } else {\n                  setTokenExpired(true)\n                }\n                \n            });  \n          }\n        },\n        {\n          label: 'Não',\n          onClick: () => {\n            confirmAlert({\n              title: 'Informação',\n              message: 'Exclusão cancelada',\n              buttons: [\n                {\n                  label: 'Ok',\n                  onClick: () => {}\n                }\n              ]\n            });\n          }\n        }\n      ]\n    });\n      \n  }\n  \n\n  useEffect(() => {\n\n    UnidadeService.getUnidades(page + 1, limit, clienteId)\n      .then((result) => {\n        setLoading(false);\n        setLpageable(result.data);\n      })\n      .catch((error) => {\n        if(error.data) {\n          //console.log(error.request);\n          setLoading(false);\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedUnidadeIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedUnidadeIds.length > 0\n                      && selectedUnidadeIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Unidade\n                </StyledTableCell>\n                <StyledTableCell>\n                  Sigla\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((unidade) => (\n                <TableRow\n                  hover\n                  key={unidade.id}\n                  selected={selectedUnidadeIds.indexOf(unidade.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUnidadeIds.indexOf(unidade.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, unidade.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {unidade.descricao}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {unidade.sigla}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        title=\"Editar unidade\"\n                        onClick={(event) => handleAlterUnidade(unidade.id)}>\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                      <IconButton\n                        title=\"Excluir unidade\" color=\"secondary\"\n                        onClick={(event) => handleDeleteUnidade(unidade.id)}>\n                          <Delete />\n                      </IconButton>\n                      <IconButton\n                        title=\"Clínicas\" color=\"secondary\"\n                        onClick={(event) => handleNavegarToClinicas(unidade.id)}>\n                          <AccountTree />\n                      </IconButton>\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/views/unidade/UnidadeListView/index.js",["701","702","703","704"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst UnidadeListView = () => {\n  let {clienteId} = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Unidades\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar clienteId={clienteId}/>\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default UnidadeListView;\n","/home/carlos/work/cznapp/src/views/cliente/ClienteListView/index.js",["705","706","707","708"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n\n\nconst ClienteListView = () => {\n\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Clientes\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ClienteListView;\n","/home/carlos/work/cznapp/src/views/unidade/UnidadeListView/Toolbar.js",["709","710","711","712","713","714","715"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, clienteId, ...rest }) => {\n  const classes = useStyles();\n  \n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    var url = '/app/unidades/cliente/' + clienteId + '/' + 0;\n    console.log(\"URL: \", url);\n    navigate(url, {});\n  });\n\n  const handleClickGoBack = (() => {\n    navigate('/app/clientes', {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n              spacing={3}>\n              Novo\n            </Button>\n            {'   '}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClickGoBack}\n              spacing={3}>\n              Voltar\n            </Button>\n          </Grid>\n        </Grid>\n        \n      </Box>\n\n      \n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/cliente/ClienteFormView/index.js",["716"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport ClienteService from '../../../services/ClienteService'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ClienteFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const nCliente = {\n    id : '',\n    documento : '',\n    razaoSocial : '',\n    fantasia : '',\n    ie : '',\n    logradouro : '',\n    numero : '',\n    complemento : '',\n    bairro : '',\n    cidade : '',\n    codIbge : '',\n    uf : '',\n    cep : '',\n    fone1 : '',\n    fone2 : ''\n  }\n\n  const[clienteSel, setClienteSel] = useState(nCliente);\n  \n  let {clienteId}  = useParams();\n\n  useEffect(() => {\n    ClienteService.getCliente(clienteId)\n      .then((result) => {\n        setClienteSel(result.data)\n      })\n      .catch((error) => {\n        setErrorMsg(error.data);\n        \n      });    \n  }, [clienteId]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro do cliente\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails clienteSel={clienteSel}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ClienteFormView;\n","/home/carlos/work/cznapp/src/views/unidade/UnidadeFormView/ProfileDetails.js",[],"/home/carlos/work/cznapp/src/services/UnidadeService.js",["717"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getUnidades: (page, size, idCliente) => \n    instance({\n      'method' : 'GET',\n      'url' : '/unidades/cliente/' + idCliente, \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n    getUnidadesList: (clienteId) => \n    instance({\n      'method' : 'GET',\n      'url' : '/unidades/cliente/' + clienteId + \"/lista\", \n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getUnidade: (unidadeId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/unidades/' + unidadeId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteUnidade: (unidadeId) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/unidades/' + unidadeId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaUnidade: (data, clienteId) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/unidades/cliente/' + clienteId,\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}",["718","719"],"/home/carlos/work/cznapp/src/views/clinica/ClinicaListView/Results.js",["720","721","722"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Edit, Delete } from '@material-ui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport ClinicaService from '../../../services/ClinicaService';\nimport {Alert} from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, clienteId, unidadeId, pageable, ...rest }) => {\n  \n  const classes = useStyles();\n  const [loading, setLoading] = useState(true)\n  const [selectedClinicaIds, setSelectedClinicaIds] = useState([]);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedClinicaIds;\n\n    if (event.target.checked) {\n      newSelectedClinicaIds = lpageable.content.map((clinica) => clinica.id);\n    } else {\n      newSelectedClinicaIds = [];\n    }\n\n    setSelectedClinicaIds(newSelectedClinicaIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedClinicaIds.indexOf(id);\n    let newSelectedClinicaIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedClinicaIds = newSelectedClinicaIds.concat(selectedClinicaIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedClinicaIds = newSelectedClinicaIds.concat(selectedClinicaIds.slice(1));\n    } else if (selectedIndex === selectedClinicaIds.length - 1) {\n      newSelectedClinicaIds = newSelectedClinicaIds.concat(selectedClinicaIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedClinicaIds = newSelectedClinicaIds.concat(\n        selectedClinicaIds.slice(0, selectedIndex),\n        selectedClinicaIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedClinicaIds(newSelectedClinicaIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterClinica = (clinicaId) => {\n    navigate('/app/clinicas/' + clienteId + '/' + unidadeId + '/' + clinicaId, {replace : true});\n  }\n\n  const handleDeleteClinica = (clinicaId) => {\n\n    confirmAlert({\n      title: 'Confirmação',\n      message: 'Deseja excluir a clínica?',\n      buttons: [\n        {\n          label:'Sim',\n          onClick: () => {\n\n            ClinicaService.deleteClinica(clinicaId)\n              .then((result) => {\n                  \n                confirmAlert({\n                  title: 'Informação',\n                  message: 'Clinica excluída',\n                  buttons: [\n                    {\n                      label: 'Ok',\n                      onClick: () => {\n                        if(reload === 0) {\n                          setReload(1);\n                        } else {\n                          setReload(0);\n                        }\n                      }\n                    }\n                  ]\n                });\n              })\n              .catch((error) => {\n                if(error.data) {\n                  setErrorMsg(error.data);\n                } else {\n                  setTokenExpired(true)\n                }\n                \n            });  \n          }\n        },\n        {\n          label: 'Não',\n          onClick: () => {\n            confirmAlert({\n              title: 'Informação',\n              message: 'Exclusão cancelada',\n              buttons: [\n                {\n                  label: 'Ok',\n                  onClick: () => {}\n                }\n              ]\n            });\n          }\n        }\n      ]\n    });\n      \n  }\n  \n\n  useEffect(() => {\n\n    ClinicaService.getClinicas(page + 1, limit, unidadeId)\n      .then((result) => {\n        setLoading(false);\n        setLpageable(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.data) {\n          console.log(error.request);\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedClinicaIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedClinicaIds.length > 0\n                      && selectedClinicaIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Clínica\n                </StyledTableCell>\n                <StyledTableCell>\n                  Sigla\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((clinica) => (\n                <TableRow\n                  hover\n                  key={clinica.id}\n                  selected={selectedClinicaIds.indexOf(clinica.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedClinicaIds.indexOf(clinica.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, clinica.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {clinica.descricao}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {clinica.sigla}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        title=\"Editar clínica\"\n                        onClick={(event) => handleAlterClinica(clinica.id)}>\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                      <IconButton\n                        title=\"Excluir clínica\" color=\"secondary\"\n                        onClick={(event) => handleDeleteClinica(clinica.id)}>\n                          <Delete />\n                      </IconButton>\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/services/ClinicaService.js",["723"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getClinicas: (page, size, unidadeId) => \n    instance({\n      'method' : 'GET',\n      'url' : '/clinicas/unidade/' + unidadeId, \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n    getClinicasList: (unidadeId) => \n    instance({\n      'method' : 'GET',\n      'url' : '/clinicas/unidade/' + unidadeId + \"/lista\", \n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getClinica: (clinicaId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/clinicas/' + clinicaId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteClinica: (clinicaId) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/clinicas/' + clinicaId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaClinica: (data, unidadeId) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/clinicas/unidade/' + unidadeId,\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}","/home/carlos/work/cznapp/src/views/clinica/ClinicaListView/index.js",["724","725","726","727"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ClinicaListView = () => {\n  let {clienteId, unidadeId} = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Clínicas\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar clienteId={clienteId} unidadeId={unidadeId}/>\n        <Box mt={3}>\n          <Results clienteId={clienteId} unidadeId={unidadeId} pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ClinicaListView;\n","/home/carlos/work/cznapp/src/views/clinica/ClinicaListView/Toolbar.js",["728","729","730","731","732","733"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, clienteId, unidadeId, ...rest }) => {\n  \n  const classes = useStyles();\n  \n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    var url = '/app/clinicas/' + clienteId + '/' + unidadeId + '/' + 0;\n    console.log(\"URL: \", url);\n    navigate(url, {});\n  });\n\n  const handleClickGoBack = (() => {\n    navigate('/app/unidades/cliente/' + clienteId, {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n              spacing={3}>\n              Novo\n            </Button>\n            {'   '}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClickGoBack}\n              spacing={3}>\n              Voltar\n            </Button>\n          </Grid>\n        </Grid>\n        \n      </Box>\n\n      \n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n",["734","735"],"/home/carlos/work/cznapp/src/views/clinica/ClinicaFormView/ProfileDetails.js",[],"/home/carlos/work/cznapp/src/views/clinica/ClinicaFormView/index.js",["736"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport ClienteService from '../../../services/ClienteService';\nimport UnidadeService from '../../../services/UnidadeService';\nimport ClinicaService from '../../../services/ClinicaService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ClinicaFormView = () => {\n  let {clienteId, unidadeId, clinicaId}  = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const nClinica = {\n    id : '',\n    descricao : '',\n    sigla : ''\n  }\n  \n  const nUnidade = {\n    id : '',\n    descricao : '',\n    sigla : ''\n  }\n\n  const nCliente = {\n    id : '',\n    documento : '',\n    razaoSocial : '',\n    fantasia : '',\n    ie : '',\n    logradouro : '',\n    numero : '',\n    complemento : '',\n    bairro : '',\n    cidade : '',\n    codIbge : '',\n    uf : '',\n    cep : '',\n    fone1 : '',\n    fone2 : ''\n  }\n\n  const[unidadeSel, setUnidadeSel] = useState(nUnidade);\n  const[clienteSel, setClienteSel] = useState(nCliente);\n  const[clinicaSel, setClinicaSel] = useState(nClinica);\n  \n  useEffect(() => {\n    \n    ClienteService.getCliente(clienteId)\n      .then((result) => {\n        setClienteSel(result.data)\n      })\n      .catch((error) => {\n        setErrorMsg(error.data)\n      });\n\n    UnidadeService.getUnidade(unidadeId)\n      .then((result) => {\n        setUnidadeSel(result.data);\n      })\n      .catch((error) => {\n        setErrorMsg(error.data)\n      });\n    \n    ClinicaService.getClinica(clinicaId)\n      .then((result) => {\n        setClinicaSel(result.data);\n      })\n      .catch((error) => {\n        setErrorMsg(error.data);\n      });\n    \n        \n  }, [clienteId, unidadeId, clinicaId]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro da unidade\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails unidadeSel={unidadeSel} clienteSel={clienteSel} clinicaSel={clinicaSel}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ClinicaFormView;\n","/home/carlos/work/cznapp/src/services/ClienteService.js",["737"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getClientes: (page, size) => \n    instance({\n      'method' : 'GET',\n      'url' : '/clientes', \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      },\n    }),\n    getClientesList: () => \n    instance({\n      'method' : 'GET',\n      'url' : '/clientes',\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      },\n    }),\n  getCliente: (clienteId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/clientes/' + clienteId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteCliente: (idCliente) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/clientes/' + idCliente,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaCliente: (data) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/clientes',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  alteraCliente: (data) =>\n    instance({\n      'method' : 'PUT',\n      'url' : '/clientes',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}","/home/carlos/work/cznapp/src/services/LoginService.js",["738"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/x-www-form-urlencoded'\n  }\n});\n\nexport default {\n    login: (data) => \n        instance({\n            'method' : 'POST',\n            'url' : '/login',\n            'data' : data\n        })\n    \n}","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaListView/Results.js",["739","740"],"/home/carlos/work/cznapp/src/views/empresa/EmpresaListView/index.js",["741","742","743","744"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n\n\nconst EmpresaListView = () => {\n\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Empresas\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default EmpresaListView;\n","/home/carlos/work/cznapp/src/views/unidade/UnidadeFormView/index.js",["745"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport ClienteService from '../../../services/ClienteService';\nimport UnidadeService from '../../../services/UnidadeService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst UnidadeFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const nUnidade = {\n    id : '',\n    descricao : '',\n    sigla : ''\n  }\n\n  const nCliente = {\n    id : '',\n    documento : '',\n    razaoSocial : '',\n    fantasia : '',\n    ie : '',\n    logradouro : '',\n    numero : '',\n    complemento : '',\n    bairro : '',\n    cidade : '',\n    codIbge : '',\n    uf : '',\n    cep : '',\n    fone1 : '',\n    fone2 : ''\n  }\n\n  const[unidadeSel, setUnidadeSel] = useState(nUnidade);\n  const[clienteSel, setClienteSel] = useState(nCliente)\n  \n  let {clienteId, unidadeId}  = useParams();\n\n  useEffect(() => {\n    \n    ClienteService.getCliente(clienteId)\n      .then((result) => {\n        setClienteSel(result.data)\n      })\n      .catch((error) => {\n        setErrorMsg(error.data)\n      });\n\n    UnidadeService.getUnidade(unidadeId)\n      .then((result) => {\n        setUnidadeSel(result.data);\n      })\n      .catch((error) => {\n        setErrorMsg(error.data)\n      });\n    \n        \n  }, [clienteId, unidadeId]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro da unidade\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails unidadeSel={unidadeSel} clienteSel={clienteSel}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default UnidadeFormView;\n","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaFormView/ProfileDetails.js",["746","747"],"/home/carlos/work/cznapp/src/services/TipoDietaService.js",["748"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getTiposDieta: (page, size) => \n    instance({\n      'method' : 'GET',\n      'url' : '/tiposdieta', \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getTipoDieta: (tipoDietaId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/tiposdieta/' + tipoDietaId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteTipoDieta: (tipoDietaId) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/tiposdieta/' + tipoDietaId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaTipoDieta: (data) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/tiposdieta',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  alteraTipoDieta: (data) =>\n    instance({\n      'method' : 'PUT',\n      'url' : '/tiposdieta',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n    getTiposDietaList: () => \n    instance({\n      'method' : 'GET',\n      'url' : '/tiposdieta', \n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaFormView/index.js",["749","750","751","752"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport TipoDietaService from '../../../services/TipoDietaService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst TipoDietaFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  \n  let {tipoDietaId}  = useParams();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro da unidade\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails tipoDieta={tipoDietaId}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TipoDietaFormView;\n","/home/carlos/work/cznapp/src/services/TipoDietaComplementarService.js",["753"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getTiposDietaComplementar: (page, size, tipoDietaId) => \n    instance({\n      'method' : 'GET',\n      'url' : '/tiposdietacomplementar/tipodieta/' + tipoDietaId, \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getTiposDietaComplementarList: (tipoDietaId) => \n    instance({\n      'method' : 'GET',\n      'url' : '/tiposdietacomplementar/tipodieta/' + tipoDietaId + \"/lista\",\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getTipoDietaComplementar: (tipoDietaComplementarId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/tiposdietacomplementar/' + tipoDietaComplementarId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteTipoDietaComplementar: (tipoDietaComplementarId) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/tiposdietacomplementar/' + tipoDietaComplementarId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaTipoDietaComplementar: (data, tipoDietaComplementarId) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/tiposdietacomplementar/tipodieta/' + tipoDietaComplementarId,\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarListView/Results.js",["754","755","756","757"],"/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarFormView/ProfileDetails.js",[],"/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaListView/index.js",["758","759","760","761"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst TipoDietaListView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Tipos de Dieta\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TipoDietaListView;\n","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarListView/Toolbar.js",["762","763","764","765","766","767","768"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, tipoDietaId, ...rest }) => {\n  const classes = useStyles();\n  \n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    var url = '/app/tiposdietacomplementar/tipodieta/' + tipoDietaId + '/' + 0;\n    console.log(\"URL: \", url);\n    navigate(url, {});\n  });\n\n  const handleClickGoBack = (() => {\n    navigate('/app/tiposdieta', {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n              spacing={3}>\n              Novo\n            </Button>\n            {'   '}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClickGoBack}\n              spacing={3}>\n              Voltar\n            </Button>\n          </Grid>\n        </Grid>\n        \n      </Box>\n\n      \n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/tipodieta/TipoDietaListView/Toolbar.js",["769","770","771","772","773","774","775"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, clienteId, ...rest }) => {\n  const classes = useStyles();\n  \n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    var url = '/app/tiposdieta/' + 0;\n    console.log(\"URL: \", url);\n    navigate(url, {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n              spacing={3}>\n              Novo\n            </Button>\n          </Grid>\n        </Grid>\n        \n      </Box>\n\n      \n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarListView/index.js",["776","777","778","779"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst TipoDietaComplementarListView = () => {\n  let {tipoDietaId} = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Tipos de dieta complementar\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar tipoDietaId={tipoDietaId}/>\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TipoDietaComplementarListView;\n",["780","781"],"/home/carlos/work/cznapp/src/views/tipodietacomplementar/TipoDietaComplementarFormView/index.js",["782"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport TipoDietaService from '../../../services/TipoDietaService';\nimport TipoDietaComplementarService from '../../../services/TipoDietaComplementarService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst TipoDietaComplementarFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const nTipoDietaComp = {\n    id : '',\n    descricao : '',\n    sigla : ''\n  }\n\n  const nTipoDieta = {\n    id : '',\n    descricao : '',\n    sigla : ''\n  }\n\n  const[tipoDietaCompSel, setTipoDietaCompSel] = useState(nTipoDietaComp);\n  const[tipoDietaSel, setTipoDietaSel] = useState(nTipoDieta)\n  \n  let {tipoDietaId, tipoDietaCompId}  = useParams();\n\n  useEffect(() => {\n    \n    TipoDietaService.getTipoDieta(tipoDietaId)\n      .then((result) => {\n        setTipoDietaSel(result.data)\n      })\n      .catch((error) => {\n        setErrorMsg(error.data)\n      });\n\n    TipoDietaComplementarService.getTipoDietaComplementar(tipoDietaCompId)\n      .then((result) => {\n        setTipoDietaCompSel(result.data);\n      })\n      .catch((error) => {\n        setErrorMsg(error.data)\n      });\n    \n        \n  }, [tipoDietaId, tipoDietaCompId]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro do tipo de dieta complementar\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails tipoDietaCompSel={tipoDietaCompSel} tipoDietaSel={tipoDietaSel}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TipoDietaComplementarFormView;\n","/home/carlos/work/cznapp/src/views/sobre/SobreListView/Results.js",["783","784"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  makeStyles,\n  LinearProgress,\n  CardHeader,\n  Divider,\n  CardContent\n} from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport SobreService from '../../../services/SobreService'\nimport { Alert } from '@material-ui/lab';\nimport { zonedTimeToUtc, format } from 'date-fns-tz';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, ...rest }) => {\n  \n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate;\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const [reload, setReload] = useState(0);\n  const [values, setValues] = useState({\n    versao : null,\n    licenca : null\n  });\n\n  useEffect(() => {\n\n    SobreService.getSobre()\n      .then((result) => {\n        setLoading(false);\n        setValues(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.data) {\n          console.log(error.request);\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  \n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {loading && \n        <LinearProgress></LinearProgress>}\n      {errorMsg &&\n        <Alert severity=\"error\">{errorMsg}</Alert>}\n      <CardHeader\n        title={\"Sobre o sistema\"}\n      >\n      </CardHeader>\n      <Divider />\n      <CardContent>\n\n        <Table>\n          <TableBody>\n            {\n              values.versao &&\n                <TableRow>\n                  <TableCell>{\"Versão\"}</TableCell>\n                  <TableCell>{values.versao}</TableCell>\n                </TableRow>\n            }\n            {\n              values.licenca &&\n                <TableRow>\n                  <TableCell>{\"Produto\"}</TableCell>\n                  <TableCell>{values.licenca.product.name}</TableCell>\n                </TableRow>\n                \n            }\n            {\n              values.licenca &&\n              <TableRow>\n                <TableCell>{\"Licenciado para\"}</TableCell>\n                <TableCell>{values.licenca.customer.customerName + \" (\" + values.licenca.customer.document + \")\"}</TableCell>\n              </TableRow>\n            }\n            {\n              values.licenca &&\n              <TableRow>\n                <TableCell>{\"Expira em\"}</TableCell>\n                <TableCell>\n                    {format(zonedTimeToUtc(values.licenca.expirationDate, 'America/Sao_Paulo'), \"dd/MM/yyyy HH:mm:ss\")}\n                </TableCell>\n              </TableRow>\n            }\n            {\n            values.licenca && \n            values.licenca.infos.map((info) => (\n                <TableRow key={info.id}>\n                  <TableCell>{info.descKeyInfo}</TableCell>\n                  <TableCell>{info.value}</TableCell>\n                </TableRow>\n              )\n            )\n          }\n          </TableBody>\n        </Table>\n      </CardContent>\n      \n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/views/sobre/SobreListView/index.js",["785","786","787"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n\n\nconst SobreListView = () => {\n\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Sobre\"\n    >\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          <Results />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SobreListView;\n","/home/carlos/work/cznapp/src/views/contrato/ContratoListView/Results.js",["788","789"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Edit, Delete, CheckCircle, HighlightOff, Settings} from '@material-ui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport ContratoService from '../../../services/ContratoService'\nimport { Alert } from '@material-ui/lab';\nimport { zonedTimeToUtc, format } from 'date-fns-tz';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, pageable, ...rest }) => {\n  const classes = useStyles();\n  const [selectedContratoIds, setSelectedContratoIds] = useState([]);\n  const [limit, setLimit] = useState(5);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedContratoIds;\n\n    if (event.target.checked) {\n      newSelectedContratoIds = lpageable.content.map((contrato) => contrato.id);\n    } else {\n      newSelectedContratoIds = [];\n    }\n\n    setSelectedContratoIds(newSelectedContratoIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedContratoIds.indexOf(id);\n    let newSelectedContratoIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedContratoIds = newSelectedContratoIds.concat(selectedContratoIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedContratoIds = newSelectedContratoIds.concat(selectedContratoIds.slice(1));\n    } else if (selectedIndex === selectedContratoIds.length - 1) {\n      newSelectedContratoIds = newSelectedContratoIds.concat(selectedContratoIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedContratoIds = newSelectedContratoIds.concat(\n        selectedContratoIds.slice(0, selectedIndex),\n        selectedContratoIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedContratoIds(newSelectedContratoIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterContrato = (contratoId) => {\n    navigate('/app/contratos/' + contratoId, {replace : true});\n  }\n\n  const handleConfigureContrato = (contratoId) => {\n    navigate('/app/contratos/' + contratoId + \"/configuracao\", {replace : true});\n  }\n\n  const handleDeleteContrato = (contratoId) => {\n\n    confirmAlert({\n      title: 'Confirmação',\n      message: 'Deseja excluir o contrato?',\n      buttons: [\n        {\n          label:'Sim',\n          onClick: () => {\n\n            ContratoService.deleteContrato(contratoId)\n              .then((result) => {\n                  \n                confirmAlert({\n                  title: 'Informação',\n                  message: 'Contrato excluído',\n                  buttons: [\n                    {\n                      label: 'Ok',\n                      onClick: () => {\n                        if(reload === 0) {\n                          setReload(1);\n                        } else {\n                          setReload(0);\n                        }\n                      }\n                    }\n                  ]\n                });\n              })\n              .catch((error) => {\n                if(error.data) {\n                  setErrorMsg(error.data);\n                } else {\n                  setTokenExpired(true)\n                }\n                \n            });  \n          }\n        },\n        {\n          label: 'Não',\n          onClick: () => {\n            confirmAlert({\n              title: 'Informação',\n              message: 'Exclusão cancelada',\n              buttons: [\n                {\n                  label: 'Ok',\n                  onClick: () => {}\n                }\n              ]\n            });\n          }\n        }\n      ]\n    });\n      \n  }\n  \n\n  useEffect(() => {\n\n    if(JSON.parse(localStorage.getItem(\"@app-user\")).perfil !== 'ADMINISTRADOR') {\n      navigate(\"/app/401\", {}); \n    }\n    \n    ContratoService.getContratos(page + 1, limit)\n      .then((result) => {\n        setLoading(false);\n        setLpageable(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.data) {\n          console.log(error.request);\n          setErrorMsg(error.data);\n        } else {\n          setTokenExpired(true)\n        }\n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedContratoIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedContratoIds.length > 0\n                      && selectedContratoIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Empresa\n                </StyledTableCell>\n                <StyledTableCell>\n                  Cliente\n                </StyledTableCell>\n                <StyledTableCell>\n                  Vigência\n                </StyledTableCell>\n                <StyledTableCell>\n                  Tipo faturamento\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ativo\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((contrato) => (\n                <TableRow\n                  hover\n                  key={contrato.id}\n                  selected={selectedContratoIds.indexOf(contrato.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedContratoIds.indexOf(contrato.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, contrato.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {contrato.empresa.razaoSocial}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {contrato.cliente.razaoSocial}\n                  </TableCell>\n                  <TableCell>\n                    {format(zonedTimeToUtc(contrato.vigenciaInicial, 'America/Sao_Paulo'), \"dd/MM/yyyy\") + \" a \" + format(zonedTimeToUtc(contrato.vigenciaFinal, 'America/Sao_Paulo'), \"dd/MM/yyyy\")}\n                  </TableCell>\n                  <TableCell>\n                    {contrato.tipoFaturamento}\n                  </TableCell>\n                  <TableCell>\n                    {contrato.ativo ?\n                      <Typography color=\"primary\"><CheckCircle /></Typography> : \n                      <Typography color=\"error\"><HighlightOff /></Typography>}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        aria-label=\"Configurações\"\n                        onClick={(event) => handleConfigureContrato(contrato.id)}\n                        size=\"small\">\n                        <Settings color=\"primary\" />\n                      </IconButton>\n                    \n                      <IconButton\n                        aria-label=\"Editar contrato\"\n                        onClick={(event) => handleAlterContrato(contrato.id)}\n                        size=\"small\">\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                    \n                      <IconButton\n                        aria-label=\"Excluir contrato\" color=\"secondary\"\n                        onClick={(event) => handleDeleteContrato(contrato.id)}\n                        size=\"small\">\n                          <Delete />\n                      </IconButton>\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/views/contrato/ContratoFormView/ProfileDetails.js",[],"/home/carlos/work/cznapp/src/views/contrato/ContratoListView/Toolbar.js",["790","791","792","793","794","795"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, userSel, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    navigate('/app/contratos/' + 0, {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleClick}\n              >\n                Novo\n              </Button>\n            </Grid>\n        </Grid>\n        \n      </Box>\n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/contrato/ContratoFormView/index.js",["796","797","798","799","800","801"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\nimport ContratoService from '../../../services/ContratoService'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ContratoFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const[contratoSel, setContratoSel] = useState();\n  \n  let {contratoId}  = useParams();\n\n  /*\n  useEffect(() => {\n    ContratoService.getContrato(contratoId)\n      .then((result) => {\n        setContratoSel(result.data)\n        console.log(\"contratoSel \", contratoSel);\n      })\n      .catch((error) => {\n        setErrorMsg(error.data);\n        \n      });    \n  }, [contratoId]);\n  */\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro do contrato\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails contratoId={contratoId}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ContratoFormView;\n","/home/carlos/work/cznapp/src/services/ContratoService.js",["802"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n});\n\nexport default {\n  getContratos: (page, size) => \n    instance({\n      'method' : 'GET',\n      'url' : '/contratos', \n      'params' : {\n        'page' : page,\n        'size' : size\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      },\n    }),\n  getContratosList: () =>\n    instance({\n      'method' : 'GET',\n      'url' : '/contratos',\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      },\n    }),\n  getContrato: (contratoId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/contratos/' + contratoId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteContrato: (contratoId) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/contratos/' + contratoId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  criaContrato: (data) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/contratos',\n      'data' : data,\n      'headers' : {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : ''),\n        \n      }\n    }),\n  alteraContrato: (data) =>\n    instance({\n      'method' : 'PUT',\n      'url' : '/contratos',\n      'data' : data,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  adicionaUnidade: (unidadeId, contratoId) =>\n    instance({\n      'method': 'POST',\n      'url': '/contratos/unidades',\n      'params': {\n        'unidadeId': unidadeId,\n        'contratoId': contratoId\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  removeUnidade: (unidadeId, contratoId) =>\n    instance({\n      'method': 'DELETE',\n      'url': '/contratos/unidades',\n      'params': {\n        'unidadeId': unidadeId,\n        'contratoId': contratoId\n      },\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getUnidades: (contratoId) =>\n      instance({\n        'method': 'GET',\n        'url': '/contratos/' + contratoId + '/unidades',\n        'headers' : {\n          'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n        }\n      })\n}","/home/carlos/work/cznapp/src/views/errors/NotAuthorizedView.js",[],"/home/carlos/work/cznapp/src/views/mapa/SelecaoClinicaView/ProfileDetails.js",["803","804","805","806","807","808","809","810","811","812","813"],"import React, { useEffect, useState } from 'react';\nimport {useCookies} from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  LinearProgress,\n  Switch,\n  Typography\n} from '@material-ui/core';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Alert} from '@material-ui/lab';\nimport ClienteService from '../../../services/ClienteService';\nimport UnidadeService from '../../../services/UnidadeService';\nimport ClinicaService from '../../../services/ClinicaService';\nimport moment from 'moment';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const [clientes, setClientes] = useState([]);\n  const [unidades, setUnidades] = useState([]);\n  const [clinicas, setClinicas] = useState([]);\n  const [cookies, setCookie] = useCookies(['mapaClienteSel', 'mapaUnidadeSel', 'mapaClinicaSel']);\n\n\n  const [clienteSel, setClienteSel] = useState(-1);\n  const [unidadeSel, setUnidadeSel] = useState(-1);\n  const [clinicaSel, setClinicaSel] = useState(-1);\n  \n  const [values, setValues] = useState({\n    cliente : cookies.mapaClienteSel,\n    unidade : cookies.mapaUnidadeSel,\n    clinica : cookies.mapaClienteSel\n  });\n\n  useEffect(() => {\n\n    \n    if(cookies.mapaClienteSel) {\n      setValues({\n        ...values,\n        cliente: cookies.mapaClienteSel\n      })\n    }\n\n    if(cookies.mapaUnidadeSel) {\n      setValues({\n        ...values,\n        unidade: cookies.mapaUnidadeSel\n      }) \n    }\n\n    if(cookies.mapaClinicaSel) {\n      setValues({\n        ...values,\n        clinica: cookies.mapaClinicaSel\n      })\n    }\n\n    ClienteService.getClientesList()\n      .then((result) =>{\n        setLoading(false);\n        setClientes(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.response.data) {\n          setError(error.response.data.detail)\n        } else {\n          setError(JSON.stringify(error));\n        }\n      });\n  },[]);\n\n  useEffect(() => {\n    if(values.cliente > 0) {\n      setLoading(true)\n      UnidadeService.getUnidadesList(values.cliente)\n        .then((result) =>{\n          setLoading(false)\n          setUnidades(result.data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          if(error.response.data) {\n            setError(error.response.data.detail);\n          } else {\n            setError(JSON.stringify(error));\n          }\n        });\n    }\n  },[values.cliente]);\n\n  useEffect(() => {\n    if(values.unidade > 0) {\n      setLoading(true);\n      ClinicaService.getClinicasList(values.unidade)\n        .then((result) => {\n          setLoading(false);\n          setClinicas(result.data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          if(error.response.data) {\n            setError(error.response.data.detail);\n          } else {\n            setError(error);\n          }\n        });\n    }\n  },[values.unidade]);\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n  \n  const handleSubmit = ( () => {\n    console.log(\"Submitting ....\");\n    let expires = (60*60);\n    setCookie('mapaClienteSel', values.cliente, {path: '/', maxAge: expires});\n    setCookie('mapaUnidadeSel', values.unidade, {path: '/', maxAge: expires});\n    setCookie('mapaClinicaSel', values.clinica, {path: '/', maxAge: expires});\n    navigate(\"/app/mapas/\" + values.clinica, {replace: true});\n  });\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Informe os dados e clique em Ok para visualizar.\"\n          title=\"Mapa de pacientes\"\n        />\n        {error && \n          <Alert severity=\"error\">{error}</Alert>}\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n            direction=\"column\"\n          >\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Cliente\"\n                name=\"cliente\"\n                required\n                \n                onChange={handleChange}\n                value={values.cliente}\n                variant=\"outlined\"\n                select\n                SelectProps={{ native: true }}\n              >\n                <option value={0}></option>\n                {\n                  clientes.map((option) =>(\n                    <option key={option.id} value={option.id}>{option.razaoSocial}  </option>\n                  ))\n                }\n              </TextField>\n            </Grid>\n\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Unidade\"\n                name=\"unidade\"\n                required\n                \n                onChange={handleChange}\n                value={values.unidade}\n                variant=\"outlined\"\n                select\n                SelectProps={{ native: true }}\n              >\n                <option value={0}></option>\n                {\n                  unidades.map((option) =>(\n                    <option key={option.id} value={option.id}>{option.descricao}  </option>\n                  ))\n                }\n              </TextField>\n            </Grid>\n            \n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Clínica\"\n                name=\"clinica\"\n                required\n                \n                onChange={handleChange}\n                value={values.clinica}\n                variant=\"outlined\"\n                select\n                SelectProps={{ native: true }}\n              >\n                <option value={0}></option>\n                {\n                  clinicas.map((option) =>(\n                    <option key={option.id} value={option.id}>{option.descricao}  </option>\n                  ))\n                }\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n           \n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n              disabled={loading}\n              fullWidth\n            >\n              Ok\n            </Button>\n          \n        </Grid>\n          </Grid>\n        </CardContent>        \n        {loading && \n          <LinearProgress></LinearProgress>}\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","/home/carlos/work/cznapp/src/views/mapa/MapaListView/Toolbar.js",["814","815","816","817","818","819","820"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, clinicaId, ...rest }) => {\n  const classes = useStyles();\n  \n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    var url = '/app/mapas/' + clinicaId + '/' + 0;\n    console.log(\"URL: \", url);\n    navigate(url, {});\n  });\n\n  const handleClickGoBack = (() => {\n    navigate('/app/mapas', {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Grid\n            container\n            spacing={3}>\n          <Grid\n            item\n            md={6}\n            xs={12}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n              spacing={3}>\n              Novo\n            </Button>\n            {'   '}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClickGoBack}\n              spacing={3}>\n              Voltar\n            </Button>\n          </Grid>\n        </Grid>\n        \n      </Box>\n\n      \n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/mapa/MapaListView/Results.js",["821","822","823","824","825","826","827"],"import React, { useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles,\n  IconButton,\n  LinearProgress\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Edit, Delete, AccountTree} from '@material-ui/icons'\nimport { useNavigate } from 'react-router-dom';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport MapaService from '../../../services/MapaService';\nimport ClinicaService from '../../../services/ClinicaService';\nimport {useParams} from 'react-router-dom';\nimport {Alert} from '@material-ui/lab';\nimport { zonedTimeToUtc, format } from 'date-fns-tz';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, pageable, ...rest }) => {\n  let {clinicaId}  = useParams();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [selectedMapaIds, setSelectedMapaIds] = useState([]);\n  const [limit, setLimit] = useState(50);\n  const [page, setPage] = useState(0);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [isTokenExpired, setTokenExpired] = useState(false);\n  const navigate = useNavigate();\n  const [lpageable, setLpageable] = useState({\n    content : [],\n    totalElements : 0\n  });\n  const [reload, setReload] = useState(0);\n  const [clinicaSel, setClinicaSel] = useState();\n\n  const handleSelectAll = (event) => {\n    let newSelectedMapaIds;\n\n    if (event.target.checked) {\n      newSelectedMapaIds = lpageable.content.map((mapa) => mapa.id);\n    } else {\n      newSelectedMapaIds = [];\n    }\n\n    setSelectedMapaIds(newSelectedMapaIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedMapaIds.indexOf(id);\n    let newSelectedMapaIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedMapaIds = newSelectedMapaIds.concat(selectedMapaIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedMapaIds = newSelectedMapaIds.concat(selectedMapaIds.slice(1));\n    } else if (selectedIndex === selectedMapaIds.length - 1) {\n      newSelectedMapaIds = newSelectedMapaIds.concat(selectedMapaIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedMapaIds = newSelectedMapaIds.concat(\n        selectedMapaIds.slice(0, selectedIndex),\n        selectedMapaIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedMapaIds(newSelectedMapaIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleAlterMapa = (mapaId) => {\n    navigate('/app/mapas/' + clinicaId + '/' + mapaId, {replace : true});\n  }\n\n  useEffect(() => {\n    setLoading(true);\n\n    ClinicaService.getClinica(clinicaId)\n      .then((result) => {\n        setClinicaSel(result.data);\n      })\n      .catch((error) => {\n        if(error.response.data) {\n          setErrorMsg(error.response.data.detail)\n        } else {\n          setErrorMsg(JSON.stringify(error));\n        }\n      });\n\n    MapaService.getMapas(page + 1, limit, clinicaId)\n      .then((result) => {\n        setLoading(false);\n        setLpageable(result.data);\n      })\n      .catch((error) => {\n        setLoading(false)\n\n        if(error.response.data) {\n          setErrorMsg(error.response.data.detail)\n        } else {\n          if(JSON.stringify(error).includes(\"401\")) {\n            setTokenExpired(true)\n          } else {\n            setErrorMsg(JSON.stringify(error));\n          }\n          \n        }\n\n        \n      });\n\n  }, [page, limit, reload]);\n\n  useEffect(() =>{\n    if(isTokenExpired) {\n      navigate('/', {replace : true});\n    }\n  },[isTokenExpired]);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          {loading && <LinearProgress></LinearProgress>}\n          {errorMsg &&\n                  <Alert severity=\"error\">{errorMsg}</Alert>}\n          {clinicaSel &&\n            <Typography\n              variant=\"h3\">\n                Clínica: {clinicaSel.descricao} ({clinicaSel.sigla})\n            </Typography>  \n          }\n          <Table>\n            <TableHead>\n              <TableRow>\n                <StyledTableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedMapaIds.length === lpageable.content.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedMapaIds.length > 0\n                      && selectedMapaIds.length < lpageable.content.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </StyledTableCell>\n                <StyledTableCell>\n                  Leito\n                </StyledTableCell>\n                <StyledTableCell>\n                  Paciente\n                </StyledTableCell>\n                <StyledTableCell>\n                  Data de Nascimento\n                </StyledTableCell>\n                <StyledTableCell>\n                  Dieta\n                </StyledTableCell>\n                <StyledTableCell>\n                  Observações\n                </StyledTableCell>\n                <StyledTableCell>\n                  Ações\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {lpageable.content.slice(0, limit).map((mapa) => (\n                <TableRow\n                  hover\n                  key={mapa.id}\n                  selected={selectedMapaIds.indexOf(mapa.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedMapaIds.indexOf(mapa.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, mapa.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {mapa.leito}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {mapa.paciente}\n                  </TableCell>\n                  <TableCell>\n                    {format(\n                      zonedTimeToUtc(\n                        mapa.dataNascimento, \n                        'America/Sao_Paulo'), \"dd/MM/yyyy\")}\n                  </TableCell>\n                  <TableCell>\n                    {mapa.dieta}\n                  </TableCell>\n                  <TableCell>\n                    {mapa.observacoes}\n                  </TableCell>\n                  <TableCell>\n                    <Typography>\n                      <IconButton\n                        title=\"Editar unidade\"\n                        onClick={(event) => handleAlterMapa(mapa.id)}>\n                        <Edit color=\"primary\" />\n                      </IconButton>\n                      \n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={lpageable.totalElements}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 20, 50]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  pageable: PropTypes.object\n};\n\nexport default Results;\n","/home/carlos/work/cznapp/src/views/mapa/MapaFormView/ProfileDetails.js",["828","829","830","831","832","833","834"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  LinearProgress,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  FormLabel\n} from '@material-ui/core';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Alert} from '@material-ui/lab';\nimport MapaService from '../../../services/MapaService';\nimport TipoDietaService from '../../../services/TipoDietaService';\nimport TipoDietaComplementarService from '../../../services/TipoDietaComplementarService';\nimport moment from 'moment';\n\nconst listIdentificacao = [\n  {\n    id: 'RG',\n    label: 'RG'\n  },\n  {\n    id: 'CPF',\n    label: 'CPF'\n  },\n  {\n    id: 'CARTAO_SUS',\n    label: 'Nro. cartão SUS'\n  }\n];\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, clinicaId, mapaId, ...rest }) => {\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\")\n  const [tiposDieta, setTiposDieta] = useState([]);\n  const [tiposDietaComp, setTiposDietaComp] = useState([]);\n  const [mapaSel, setMapaSel] = useState({\n    id: 0,\n    clinica: clinicaId,\n    leito: '',\n    paciente: '',\n    dataNascimento: '',\n    tipoIdenticacao: '',\n    identificacao: '',\n    tipoDieta: 0,\n    tiposDietaComplementar: [],\n    dieta: '',\n    observacoes: ''\n  });\n\n  const userId = JSON.parse(localStorage.getItem(\"@app-user\")).id;\n  //const [values, setValues] = useState();\n  \n  const [values, setValues] = useState({\n    id: 0,\n    clinica: clinicaId,\n    leito: '',\n    paciente: '',\n    dataNascimento: '',\n    tipoIdenticacao: '',\n    identificacao: '',\n    tipoDieta: 0,\n    tiposDietaComplementar: [],\n    dieta: '',\n    observacoes: ''\n  });\n\n  /* Utilizado para os checkbox dinâmicos para seleção das dietas complementares\n    {\n      id: id do tipo de dieta complementar\n      descricao: descrição do tipo de dieta complementar\n      sigla: sigla do tipo de dieta complementar\n      selecionado: atributo que indica se o valor está selecionado ou não (true ou false)\n    }\n    Será atualizado no effect disparado quando carregados os tipos de dieta complementares da dieta selecionada\n   */\n  const [tpsComp, setTpsComp] = useState([]);\n\n  /**********************************************/\n  /*           Effects and functions            */\n  /**********************************************/\n\n  useEffect(() => {\n    MapaService.getMapa(mapaId)\n      .then((result) => {\n        setMapaSel(result.data);\n      })\n      .catch((error) => {\n        if(error.response.data) {\n          if(error.response.data.status !== 404) {\n            setError(error.response.data.detail);\n          } else {\n            setValues({\n              id: 0,\n              clinica: clinicaId,\n              leito: '',\n              paciente: '',\n              dataNascimento: '1900-01-01',\n              tipoIdentificacao: '',\n              identificacao: '',\n              tipoDieta: 0,\n              tiposDietaComplementar: [],\n              dieta: '',\n              observacoes: ''\n            });\n          }\n        } else {\n          setError(error.message);\n        }\n          \n      });\n  },[mapaId])\n\n  useEffect(() => {\n    setLoading(true);\n    var dataNasc = moment(mapaSel.dataNascimento).format(\"YYYY-MM-DD\");\n    \n    setValues({\n      id: mapaSel.id,\n      clinica: clinicaId,\n      leito: mapaSel.leito,\n      paciente: mapaSel.paciente,\n      dataNascimento: dataNasc,\n      tipoIdentificacao: mapaSel.tipoIdentificacao,\n      identificacao: mapaSel.identificacao,\n      tipoDieta: mapaSel.tipoDieta.id,\n      tiposDietaComplementar: mapaSel.tiposDietaComplementar.length > 0 ? mapaSel.tipoDietaComplementar : [],\n      dieta: mapaSel.dieta,\n      observacoes: mapaSel.observacoes\n    });\n\n    TipoDietaService.getTiposDietaList()\n      .then((result) => {\n        setLoading(false);\n        setTiposDieta(result.data);\n      })\n      .catch((error) => {\n        if(error.response.data) {\n          setError(error.response.data.detail);\n        } else {\n          if(JSON.stringify(error).includes(\"401\")) {\n            navigate(\"/\", {});\n          } else {\n            setError(JSON.stringify(error));\n          }\n        }\n      });\n    \n  }, [mapaSel]);\n\n  useEffect(() => {\n    if(values.tipoDieta) {\n      setLoading(true);\n      TipoDietaComplementarService.getTiposDietaComplementarList(values.tipoDieta)\n        .then((result) => {\n          setLoading(false);\n          setTiposDietaComp(result.data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          \n          if(error.response) {\n            if(error.response.data.status !== 404 && error.response.data.status !== 400) {\n              setError(error.response.data.detail);\n            }\n          } else {\n            var e = JSON.stringify(error);\n            if(e.includes(\"401\")) {\n              navigate(\"/\", {});\n            } else {\n              if(e.includes(\"404\")) {\n                setTiposDietaComp([]);\n              } else {\n                setError(JSON.stringify(error));\n              }\n              \n            }\n          }\n        });\n    } else {\n      setTiposDietaComp([]);\n    }\n    setTpsComp([]);\n    \n  }, [values.tipoDieta]);\n\n  /* Effect para carregamento dos tipos de dieta complementares e indicação de quais estão selecionados */\n  useEffect(() => {\n    if(tiposDietaComp) {\n      if(mapaSel.tiposDietaComplementar) {\n        for(var i = 0; i < tiposDietaComp.length; i++) {\n          var achou = false;\n          \n\n          if(mapaSel.tiposDietaComplementar.find(element => element.id === tiposDietaComp[i].id)) {\n            achou = true;\n          }\n          \n          const value = {\n            id: tiposDietaComp[i].id,\n            descricao: tiposDietaComp[i].descricao,\n            sigla: tiposDietaComp[i].sigla,\n            selecionado : achou\n          }\n\n          setTpsComp(old => [...old, value]);\n        }\n      }\n    }\n  }, [tiposDietaComp]);\n\n  const handleTipoDietaChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n      tipoDietaComplementar: 0\n    });\n  };\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleCheckTpDietaComplementar = (event) => {\n    \n    let tipos = [...tpsComp];\n    for(var i = 0; i < tipos.length; i++) {\n      if(tipos[i].id === parseInt(event.target.id)) {\n        tipos[i].selecionado = event.target.checked;\n      }\n    }\n    setTpsComp(tipos);\n  }\n\n\n  const handleGoBack = (() => {\n    navigate('/app/mapas/' + clinicaId, {replace : true});\n  });\n\n  const handleSubmit = ( () => {\n    \n    \n    setLoading(true);\n\n    let tpCompSel = [];\n    let aux = [...tpsComp];\n\n    for(var i = 0; i < aux.length; i++) {\n      if(aux[i].selecionado) {\n        tpCompSel.push(aux[i].id);\n      }\n    }\n\n    console.log(tpCompSel);\n\n    const params = new URLSearchParams();\n    params.append('mapaId', values.id);\n    params.append('clinicaId', values.clinica);\n    params.append('leito', values.leito);\n    params.append('paciente', values.paciente);\n    params.append('dataNascimento', values.dataNascimento);\n    params.append('tipoIdentificacao', values.tipoIdentificacao);\n    params.append('identificacao', values.identificacao);\n    params.append('tipoDietaId', values.tipoDieta);\n    params.append('tiposDietaComplemetarId', tpCompSel);\n    params.append('observacoes', values.observacoes);\n    params.append('usuarioId', userId);\n\n    MapaService.criaMapa(params)\n      .then((result) => {\n        alert(\"Alteração gravada com sucesso\");\n        setLoading(false);\n        navigate(\"/app/mapas/\" + clinicaId, {});\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.response.data) {\n          setError(error.response.data.detail);\n        } else {\n          if(JSON.stringify(error).includes(\"401\")) {\n            navigate(\"/\",{});\n          } else {\n            setError(JSON.stringify(error));\n          }\n        }\n      });\n    \n    \n  });\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Informe os dados e clique no botão salvar.\"\n          title=\"Alteração do mapa de pacientes\"\n        />\n        {error && \n          <Alert severity=\"error\">{error}</Alert>}\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n            \n          >\n            <Grid\n              item\n              md={3}\n              xs={3}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Informe o leito\"\n                label=\"Leito\"\n                name=\"leito\"\n                onChange={handleChange}\n                required\n                value={values.leito}\n                variant=\"outlined\"\n              >\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={9}\n              xs={9}\n            >\n              <TextField type=\"hidden\" name=\"id\" value={values.id}></TextField>\n              <TextField type=\"hidden\" name=\"clinica\" value={values.clinica}></TextField>\n              <TextField\n                fullWidth\n                helperText=\"Informe o nome do paciente\"\n                label=\"Paciente\"\n                name=\"paciente\"\n                onChange={handleChange}\n                required\n                value={values.paciente}\n                variant=\"outlined\"\n              >\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              \n              <TextField\n                fullWidth\n                \n                name=\"dataNascimento\"\n                helperText=\"Informe a data de nascimento\"\n                onChange={handleChange}\n                required\n                value={values.dataNascimento}\n                variant=\"outlined\"\n                type=\"date\"\n              >\n              </TextField>  \n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={6}\n            >\n              <TextField\n                fullWidth\n                label=\"Informe o tipo de identificação\"\n                name=\"tipoIdentificacao\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.tipoIdentificacao}\n                variant=\"outlined\"\n              >\n                <option value={0}></option>\n                {listIdentificacao.map((option) => (\n                  <option\n                    key={option.id}\n                    value={option.id}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={6}\n            >\n              <TextField\n                fullWidth\n                label=\"Identificação\"\n                name=\"identificacao\"\n                required\n                helperText=\"Informe a identificação\"\n                onChange={handleChange}\n                value={values.identificacao}\n                variant=\"outlined\"\n              ></TextField>\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Tipo de dieta\"\n                name=\"tipoDieta\"\n                required\n                helperText=\"Informe o tipo de dieta\"\n                onChange={handleTipoDietaChange}\n                value={values.tipoDieta}\n                variant=\"outlined\"\n                select\n                SelectProps={{ native: true }}\n              >\n                <option value={0}></option>\n                {\n                  tiposDieta.map((option) =>(\n                    <option key={option.id} value={option.id}>{option.sigla}</option>\n                  ))\n                }\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              {/* \n              <TextField\n                fullWidth\n                label=\"Complemento\"\n                name=\"tipoDietaComplementar\"\n                required\n                helperText=\"Informe complemento\"\n                onChange={handleChange}\n                value={values.tipoDietaComplementar}\n                variant=\"outlined\"\n                select\n                SelectProps={{ native: true }}\n              >\n                <option key={0} value={0}></option>\n                {\n                  tiposDietaComp.map((option) =>(\n                    <option key={option.id} value={option.id}>{option.sigla}</option>\n                  ))\n                }\n              </TextField>\n            */}\n                \n            <FormControl component=\"fieldset\" variant=\"standard\">\n              <FormLabel component=\"legend\" >Complementação de dieta</FormLabel>\n              <FormGroup row>\n              {\n                tpsComp.map((option) =>(\n                  <FormControlLabel\n                    control={<Checkbox\n                                color=\"primary\"\n                                key={option.id}\n                                id={option.id}\n                                name={\"selecionado\"}\n                                checked={option.selecionado} \n                                onChange={handleCheckTpDietaComplementar}/>}\n                    label={option.sigla} />\n                ))\n              }\n\n              </FormGroup>\n            </FormControl>\n            \n            </Grid>\n            \n            <Grid\n              item\n              md={12}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Observações\"\n                name=\"observacoes\"\n                helperText=\"Observações\"\n                onChange={handleChange}\n                value={values.observacoes}\n                variant=\"outlined\"\n              ></TextField>\n            </Grid>\n            \n          </Grid>\n        </CardContent>\n        <Divider />\n      <Grid container spacing={3}>\n        <Grid\n              item\n              md={6}\n              xs={6}\n            >\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleSubmit}\n            >\n              Gravar\n            </Button>\n        </Grid>\n        <Grid item md={6} xs={6}>\n            <Button\n              fullWidth\n              onClick={handleGoBack}\n              variant=\"contained\"\n            >\n              Cancelar\n            </Button>\n        </Grid>\n      </Grid>\n        {loading && \n          <LinearProgress></LinearProgress>}\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","/home/carlos/work/cznapp/src/views/mapa/SelecaoClinicaView/index.js",["835","836"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SelecaoClinicaView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mapa de pacientes\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SelecaoClinicaView;\n","/home/carlos/work/cznapp/src/services/SobreService.js",["837"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type' : 'application/json'\n  }\n});\n\nexport default {\n  getSobre: () => \n    instance({\n      'method' : 'GET',\n      'url' : '/sobre',\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      },\n    })\n}","/home/carlos/work/cznapp/src/views/mapa/MapaFormView/index.js",["838","839","840","841","842"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst MapaFormView = () => {\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const[contratoSel, setContratoSel] = useState();\n  \n  let {clinicaId}  = useParams();\n  let {mapaId} = useParams();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Alteração mapa do paciente\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails clinicaId={clinicaId} mapaId={mapaId}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default MapaFormView;\n","/home/carlos/work/cznapp/src/views/contrato/ConfigContratoFormView/ProfileDetails.js",["843","844","845","846","847"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  LinearProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  IconButton,\n  AppBar,\n  Tab,\n  Tabs\n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Delete} from '@material-ui/icons'\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {Alert} from '@material-ui/lab';\nimport RefeicaoContratoService from '../../../services/RefeicaoContratoService';\nimport UnidadeService from '../../../services/UnidadeService';\nimport ContratoService from '../../../services/ContratoService';\nimport refeicoes from '../../../utils/refeicoes';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, contratoId, ...rest }) => {\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  \n  const [error, setError] = useState({\n    msg: \"\",\n    severity: \"\"\n  });\n\n  const [errorUnidade, setErrorUnidade] = useState({\n    msg: \"\",\n    severity: \"\"\n  });\n\n  const [values, setValues] = useState({\n    contratoId: contratoId,\n    refeicao: \"\",\n    valor: \"\"\n  });\n\n  const [unidadeIdSel, setUnidadeIdSel] = useState({\n    unidade : ''\n  });\n\n  const [tabValue, setTabValue] = useState(0)\n\n  const [refeicoesContrato, setRefeicoesContrato] = useState([]);\n  const [reload, setReload] = useState(0);\n  const [reloadUnidades, setReloadUnidades] = useState(0)\n  const [unidadesContrato, setUnidadesContrato] = useState([]);\n  const [unidades, setUnidades]= useState([]);\n  const [contrato, setContrato] = useState();\n\n  //const refeicoes = arrRefeicoes;\n  /*\n  const refeicoes = [\n    {\n      id: \"\",\n      value: \"\"\n    },\n    {\n      id: \"DESJEJUM\",\n      value: \"Desjejum\"\n    },\n    {\n      id: \"LANCHE_1\",\n      value: \"Lanche 1\"\n    },\n    {\n      id: \"ALMOCO\",\n      value: \"Almoço\"\n    },\n    {\n      id: \"LANCHE_2\",\n      value: \"Lanche 2\"\n    },\n    {\n      id: \"JANTAR\",\n      value: \"Jantar\"\n    },\n    {\n      id:  \"CEIA\",\n      value: \"Ceia\"\n    }\n  ];\n  */\n\n  const map = new Map();\n  map.set(\"DESJEJUM\", \"Desjejum\");\n  map.set(\"LANCHE_1\", \"Lanche 1\");\n  map.set(\"ALMOCO\", \"Almoço\");\n  map.set(\"LANCHE_2\", \"Lanche 2\");\n  map.set(\"JANTAR\", \"Jantar\");\n  map.set(\"CEIA\", \"Ceia\");\n\n  useEffect(() => {\n    setError({\n      msg: '',\n      severity: ''\n    })\n    setLoading(true);\n    RefeicaoContratoService.getRefeicoesContrato(contratoId)\n      .then((result) => {\n        setLoading(false);\n        setRefeicoesContrato(result.data);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if(error.response) {\n          setError({\n            msg: error.response.data.detail,\n            severity: \"error\"\n          })\n        } else {\n          if(JSON.stringify(error).includes(\"401\")) {\n            navigate(\"/\", {});\n          } else {\n            setError({\n              msg: JSON.stringify(error),\n              severity: \"error\"\n            })\n          }\n        }\n      });\n      ContratoService.getContrato(contratoId)\n        .then((result) => {\n          setLoading(false)\n          setContrato(result.data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          if(error.response) {\n            setError({\n              msg: error.response.data.detail,\n              severity: \"error\"\n            })\n          } else {\n            if(JSON.stringify(error).includes(\"401\")) {\n              navigate(\"/\", {});\n            } else {\n              setError({\n                msg: JSON.stringify(error),\n                severity: \"error\"\n              })\n            }\n          }\n        })\n  }, [contratoId, reload]);\n\n  useEffect(() => {\n    console.log(\"Contrato: \", contrato);\n    if(contrato) {\n      setLoading(true);\n      UnidadeService.getUnidadesList(contrato.cliente.id)\n        .then((result) =>{\n          setLoading(false)\n          setUnidades(result.data)\n        })\n        .catch((error) => {\n          setLoading(false);\n            if(error.response) {\n              setError({\n                msg: error.response.data.detail,\n                severity: \"error\"\n              })\n            } else {\n              if(JSON.stringify(error).includes(\"401\")) {\n                navigate(\"/\", {});\n              } else {\n                setError({\n                  msg: JSON.stringify(error),\n                  severity: \"error\"\n                })\n              }\n            }\n        });\n    }\n    \n  }, [contrato]);\n  \n  useEffect(() => {\n    if(contrato) {\n      setLoading(true);\n      ContratoService.getUnidades(contratoId)\n        .then((result) =>{\n          setUnidadesContrato(result.data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          if(error.response) {\n            setError({\n              msg: error.response.data.detail,\n              severity: \"error\"\n            })\n          } else {\n            if(JSON.stringify(error).includes(\"401\")) {\n              navigate(\"/\", {});\n            } else {\n              setError({\n                msg: JSON.stringify(error),\n                severity: \"error\"\n              })\n            }\n          }\n        });\n\n    }\n  },[contrato]);\n\n  const handleSubmit = () => {\n    setLoading(true);\n    if(values.refeicao === '') {\n      setLoading(false)\n      setError({\n        msg: 'Informe a refeição',\n        severity: \"warning\"\n      })\n    } else {\n      if(values.valor === '') {\n        setLoading(false);\n        setError({\n          msg: \"Informe o valor\",\n          severity: \"warning\"\n        });\n      } else {\n        const params = new URLSearchParams();\n        params.append('refeicaoContratoId', '');\n        params.append('contratoId', values.contratoId);\n        params.append('refeicao', values.refeicao);\n        params.append('valor', values.valor);\n        RefeicaoContratoService.gravaRefeicaoContrato(params)\n          .then((result) => {\n            setLoading(false);\n            setError({\n              msg: \"Refeição incluída com sucesso\",\n              severity: \"success\"\n            });\n            setValues({\n              ...values,\n              refeicao: \"\",\n              valor: \"\"\n            });\n            if(reload === 0) {\n              setReload(1);\n            } else {\n              setReload(0);\n            }\n          })\n          .catch((error) => {\n            setLoading(false)\n            if(error.response) {\n              setError({\n                msg: error.response.data.detail,\n                severity: \"error\"\n              });\n            } else {\n              var txt = JSON.stringify(error);\n              if(txt.includes(\"401\")) {\n                navigate(\"/\", {reload: true});\n              } else {\n                setError({\n                  msg: txt,\n                  severity: \"error\"\n                });\n              }\n            }\n          });\n      }\n    }\n  }\n\n  const handleGoBack = () => {\n    navigate(\"/app/contratos\", {replace: true});\n  }\n\n  const handleDeleteRefeicao = (refeicaoContratoId) => {\n    setLoading(true);\n    RefeicaoContratoService.deleteRefeicaoContrato(refeicaoContratoId)\n      .then((result) => {\n        setLoading(false);\n        setError({\n          msg: \"Refeição excluída\",\n          severity: \"success\"\n        });\n        if(reload === 0) {\n          setReload(1);\n        } else {\n          setReload(0);\n        }\n      })\n      .catch((error) => {\n        setLoading(false)\n        if(error.response) {\n          setError({\n            msg: error.response.data.detail,\n            severity: \"error\"\n          });\n        } else {\n          var txt = JSON.stringify(error);\n          if(txt.includes(\"401\")) {\n            navigate(\"/\", {reload: true});\n          } else {\n            setError({\n              msg: txt,\n              severity: \"error\"\n            });\n          }\n        }\n      });\n  }\n\n  const handleAdicionaUnidade = () => {\n    setLoading(true);\n    ContratoService.adicionaUnidade(unidadeIdSel.unidade, contrato.id)\n      .then((result) =>{\n        setLoading(false);\n        setErrorUnidade({\n          msg: \"Unidade adicionada com sucesso\",\n          severity: \"success\"\n        })\n        if(reload === 0) {\n          setReload(1);\n        } else {\n          setReload(0);\n        }\n      })\n      .catch((error) => {\n        setLoading(false)\n        if(error.response) {\n          setErrorUnidade({\n            msg: error.response.data.detail,\n            severity: \"error\"\n          });\n        } else {\n          var txt = JSON.stringify(error);\n          if(txt.includes(\"401\")) {\n            navigate(\"/\", {reload: true});\n          } else {\n            setErrorUnidade({\n              msg: txt,\n              severity: \"error\"\n            });\n          }\n        }\n      })\n  }\n\n  const handleDeleteUnidadeContrato = (unidadeId) => {\n    setLoading(true);\n    ContratoService.removeUnidade(unidadeId, contrato.id)\n      .then((result) => {\n        setErrorUnidade({\n          msg: \"Unidade removida com sucesso\",\n          severity: \"success\"\n        })\n        if(reload === 0) {\n          setReload(1)\n        } else {\n          setReload(0)\n        }\n      })\n      .catch((error) => {\n        setLoading(false)\n        if(error.response) {\n          setErrorUnidade({\n            msg: error.response.data.detail,\n            severity: \"error\"\n          });\n        } else {\n          var txt = JSON.stringify(error);\n          if(txt.includes(\"401\")) {\n            navigate(\"/\", {reload: true});\n          } else {\n            setErrorUnidade({\n              msg: txt,\n              severity: \"error\"\n            });\n          }\n        }\n      })\n  }\n\n  const handleChange = (event) => {\n    \n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleUnidadeChanged = (event) => {\n    setUnidadeIdSel({\n      ...unidadeIdSel,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue)\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <AppBar position=\"static\">\n        <Tabs value={tabValue} onChange={handleTabChange}>\n          <Tab label=\"Valores\" {...a11yProps(0)}/>\n          <Tab label=\"Unidades associadas\" {...a11yProps(1)}/>\n        </Tabs>\n      </AppBar>\n      <TabPanel value={tabValue} index={0}>\n        <Card xs={12} md={12}>\n          <CardHeader\n            subheader=\"Informe os dados e clique adicionar.\"\n            title=\"Valores do contrato\"\n          />\n          {error.msg && \n            <Alert severity={error.severity}>{error.msg}</Alert>}\n          {loading && \n            <LinearProgress></LinearProgress>}\n          <Divider />\n          <CardContent>\n            <Grid container spacing={1}>\n              <Grid item md={4} xs={12} >\n                \n                <TextField\n                  fullWidth\n                  onChange={handleChange}\n                  required\n                  variant=\"outlined\"\n                  select\n                  SelectProps={{ native: true }}\n                  name=\"refeicao\"\n                  label=\"Refeição\"\n                  disabled={loading}\n                  value={values.refeicao}>\n                  {\n                  refeicoes.map((option) =>(\n                    <option key={option.id} value={option.id}>{option.value}</option>\n                  ))\n                }\n                \n                </TextField>\n              </Grid>\n              <Grid item md={4} xs={12} >\n\n                <TextField\n                  fullWidth\n                  onChange={handleChange}\n                  required\n                  variant=\"outlined\"\n                  name=\"valor\"\n                  label=\"Valor\"\n                  disabled={loading}\n                  value={values.valor}>\n                </TextField>\n                \n              </Grid>\n              <Grid item md={4} xs={12} >\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={handleSubmit}\n                  disabled={loading}>\n                  Adicionar\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>    \n              <Grid item md={12} xs={12} >\n                <PerfectScrollbar>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>\n                          Refeição\n                        </StyledTableCell>\n                        <StyledTableCell>\n                          Valor\n                        </StyledTableCell>\n                        <StyledTableCell>\n                          Ação\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {refeicoesContrato.map((ref) => (\n                        <TableRow\n                          hover\n                          key={ref.id}>\n                          <TableCell>\n                            {map.get(ref.refeicao)}\n                          </TableCell>\n                          <TableCell>\n                            {'R$ ' + ref.valor.toString().replace(\".\", \",\")}\n                          </TableCell>\n                          <TableCell>\n                            <Typography>\n                              <IconButton\n                                title=\"Excluir refeição\" color=\"primary\"\n                                onClick={(event) => handleDeleteRefeicao(ref.id)}>\n                                  <Delete />\n                              </IconButton>\n                            </Typography>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </PerfectScrollbar>\n              </Grid>\n            </Grid>\n            \n            <Grid container spacing={3}>\n              <Grid item md={12} xs={12} >\n                <Button\n                  fullWidth\n                  onClick={handleGoBack}\n                  variant=\"contained\"\n                  disabled={loading}\n                  color=\"primary\">\n                  Voltar\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </TabPanel>\n      <TabPanel value={tabValue} index={1}>\n        <Card xs={12} md={12}>\n          <CardHeader\n            subheader=\"Informe os dados e clique adicionar.\"\n            title=\"Unidades associadas\"\n          />\n          {errorUnidade.msg && \n            <Alert severity={errorUnidade.severity}>{errorUnidade.msg}</Alert>}\n          {loading && \n            <LinearProgress></LinearProgress>}\n          <Divider />\n          <CardContent>\n            <Grid container spacing={1}>\n              <Grid item md={6} xs={12} >\n\n                <TextField\n                  fullWidth\n                  onChange={handleUnidadeChanged}\n                  required\n                  variant=\"outlined\"\n                  select\n                  SelectProps={{ native: true }}\n                  name=\"unidade\"\n                  label=\"Unidade\"\n                  disabled={loading}\n                  value={unidadeIdSel.unidade}>\n                  <option key={''} value={''}></option>\n                  {\n                    unidades.map((option) =>(\n                      <option key={option.id} value={option.id}>{option.descricao}</option>\n                    ))\n                  }\n                \n                </TextField>\n              </Grid>\n              <Grid item md={6} xs={12} >\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={handleAdicionaUnidade}\n                  disabled={loading}>\n                  Adicionar\n                </Button>\n              </Grid>\n            </Grid>\n            <Grid container spacing={1}>    \n              <Grid item md={12} xs={12} >\n                <PerfectScrollbar>\n                  <Table>\n                    <TableHead>\n                      <TableRow>\n                        <StyledTableCell>\n                          Unidade\n                        </StyledTableCell>\n                        <StyledTableCell>\n                          Ação\n                        </StyledTableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {unidadesContrato.map((unidade) => (\n                      <TableRow\n                        hover\n                        key={unidade.id}>\n                        <TableCell>\n                          {unidade.descricao}\n                        </TableCell>\n                        <TableCell>\n                          <Typography>\n                            <IconButton\n                              title=\"Excluir unidade\" color=\"primary\"\n                              onClick={(event) => handleDeleteUnidadeContrato(unidade.id)}>\n                                <Delete />\n                            </IconButton>\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </PerfectScrollbar>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </TabPanel>\n\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","/home/carlos/work/cznapp/src/views/mapa/MapaListView/index.js",["848","849","850","851"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst MapaListView = () => {\n  let {clinicaId} = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mapa\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar clinicaId={clinicaId}/>\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default MapaListView;\n","/home/carlos/work/cznapp/src/services/RefeicaoContratoService.js",["852"],"import axios from 'axios';\n\nconst instance = axios.create( {\n  baseURL : process.env.REACT_APP_API_URL,\n});\n\nexport default {\n  getRefeicoesContrato: (contratoId) => \n    instance({\n      'method' : 'GET',\n      'url' : '/refeicoescontrato/contrato/' + contratoId, \n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      },\n    }),\n  getRefeicaoContratoPorRefeicao: (contratoId, refeicao) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/refeicoescontrato/' + contratoId + \"/\" + refeicao,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  getRefeicaoContratoPorId: (refeicaoContratoId) =>\n    instance({\n      'method' : 'GET',\n      'url' : '/refeicoescontrato/' + refeicaoContratoId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  deleteRefeicaoContrato: (refeicaoContratoId) =>\n    instance({\n      'method' : 'DELETE',\n      'url' : '/refeicoescontrato/' + refeicaoContratoId,\n      'headers' : {\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    }),\n  gravaRefeicaoContrato: (data) =>\n    instance({\n      'method' : 'POST',\n      'url' : '/refeicoescontrato',\n      'data' : data,\n      'headers' : {\n        'Content-Type' : 'application/x-www-form-urlencoded',\n        'Authorization' : 'Bearer ' + (localStorage.getItem(\"@app-user\") !== null ? JSON.parse(localStorage.getItem(\"@app-user\")).jwtToken : '')\n      }\n    })\n}","/home/carlos/work/cznapp/src/views/contrato/ConfigContratoFormView/index.js",["853","854"],"import {React, useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport ProfileDetails from './ProfileDetails';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst ConfigContratoFormView = () => {\n  const classes = useStyles();  \n  let {contratoId}  = useParams();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Cadastro do contrato\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails contratoId={contratoId}/>\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ConfigContratoFormView;\n","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoEntFormView/ProfileDetails.js",["855","856"],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoListView/Results.js",["857","858","859","860","861","862","863","864","865","866","867","868","869"],"/home/carlos/work/cznapp/src/services/SolicitacaoService.js",["870"],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoListView/Toolbar.js",["871","872","873","874","875","876"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Grid\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nimport {  useNavigate, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({ className, contratoId, unidadeId, clinicaId, dataReferencia, ...rest }) => {\n  const classes = useStyles();\n  \n  const navigate = useNavigate();\n\n  const handleClick = (() => {\n    var url = '/app/solicitacoes/' + contratoId + '/' + unidadeId + '/' + clinicaId + '/' + dataReferencia + '/form';\n    navigate(url, {});\n  });\n\n  const handleClickGoBack = (() => {\n    navigate('/app/solicitacoes', {});\n  });\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n        <Grid\n            container\n            spacing={3}\n            direction=\"row\">\n          <Grid\n            item\n            md={2}\n            xs={6}>\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClick}\n              >\n              Novo\n            </Button>\n          </Grid>\n          <Grid\n            item\n            md={2}\n            xs={6}>\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleClickGoBack}\n              >\n              Voltar\n            </Button>\n          </Grid>\n        </Grid>\n        </CardContent>\n      </Card>\n        \n\n\n      \n      \n      {\n        /*\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon\n                        fontSize=\"small\"\n                        color=\"action\"\n                      >\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  )\n                }}\n                placeholder=\"Localizar usuário\"\n                variant=\"outlined\"\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n              */}\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoListView/index.js",["877","878","879","880"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SolicitacaoListView = () => {\n  let {contratoId, unidadeId, clinicaId, dataReferencia}  = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mapa\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar contratoId={contratoId} unidadeId={unidadeId} clinicaId={clinicaId} dataReferencia={dataReferencia}/>\n        <Box mt={3}>\n          <Results pageable={pageable} contratoId={contratoId} unidadeId={unidadeId} clinicaId={clinicaId} dataReferencia={dataReferencia}/>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SolicitacaoListView;\n","/home/carlos/work/cznapp/src/utils/refeicoes.js",["881"],"export default [\n    {\n        id: \"\",\n        value: \"\"\n    },\n    {\n        id: \"DESJEJUM\",\n        value: \"Desjejum\"\n    },\n    {\n        id: \"LANCHE_1\",\n        value: \"Lanche 1\"\n    },\n    {\n        id: \"ALMOCO\",\n        value: \"Almoço\"\n    },\n    {\n        id: \"LANCHE_2\",\n        value: \"Lanche 2\"\n    },\n    {\n        id: \"JANTAR\",\n        value: \"Jantar\"\n    },\n    {\n        id:  \"CEIA\",\n        value: \"Ceia\"\n    }\n];","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoFormView/ProfileDetails.js",["882","883","884","885","886","887","888","889","890","891","892","893","894"],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoFormView/index.js",[],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemListView/Results.js",["895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910"],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemListView/index.js",["911","912","913","914"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SolicitacaoItemListView = () => {\n  let {contratoId, unidadeId, clinicaId, refeicao, dataReferencia, solicitacaoId}  = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mapa de refeições solicitadas - Analítico\"\n    >\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          <Results pageable={pageable} contratoId={contratoId} unidadeId={unidadeId} clinicaId={clinicaId} refeicao={refeicao} dataReferencia={dataReferencia} solicitacaoId={solicitacaoId}/>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SolicitacaoItemListView;\n","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemResumoListView/Results.js",["915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931"],"/home/carlos/work/cznapp/src/views/contrato/ContratoListView/index.js",["932","933","934","935"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\n\n\nconst ContratoListView = () => {\n\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Contratos\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar />\n        <Box mt={3}>\n          <Results pageable={pageable} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ContratoListView;\n","/home/carlos/work/cznapp/src/services/MapaService.js",["936"],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemResumoListView/index.js",["937","938","939","940"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../../../components/Page';\nimport Results from './Results';\nimport {useParams} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SolicitacaoItemResumoListView = () => {\n  let {contratoId, unidadeId, clinicaId, refeicao, dataReferencia, solicitacaoId}  = useParams();\n  const classes = useStyles();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [pageable, setPageable] = useState();  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Mapa de refeições solicitadas - Analítico\"\n    >\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          <Results pageable={pageable} contratoId={contratoId} unidadeId={unidadeId} clinicaId={clinicaId} refeicao={refeicao} dataReferencia={dataReferencia} solicitacaoId={solicitacaoId}/>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SolicitacaoItemResumoListView;\n","/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemFormView/ProfileDetails.js",["941","942","943","944","945","946","947","948","949","950"],"/home/carlos/work/cznapp/src/views/solicitacao/SolicitacaoItemFormView/index.js",["951","952","953","954","955"],{"ruleId":"956","replacedBy":"957"},{"ruleId":"958","replacedBy":"959"},{"ruleId":"956","replacedBy":"960"},{"ruleId":"958","replacedBy":"961"},{"ruleId":"956","replacedBy":"962"},{"ruleId":"958","replacedBy":"963"},{"ruleId":"956","replacedBy":"964"},{"ruleId":"958","replacedBy":"965"},{"ruleId":"956","replacedBy":"966"},{"ruleId":"958","replacedBy":"967"},{"ruleId":"968","severity":1,"message":"969","line":2,"column":30,"nodeType":"970","messageId":"971","endLine":2,"endColumn":38},{"ruleId":"968","severity":1,"message":"972","line":38,"column":10,"nodeType":"970","messageId":"971","endLine":38,"endColumn":14},{"ruleId":"968","severity":1,"message":"973","line":63,"column":19,"nodeType":"970","messageId":"971","endLine":63,"endColumn":26},{"ruleId":"968","severity":1,"message":"973","line":82,"column":19,"nodeType":"970","messageId":"971","endLine":82,"endColumn":26},{"ruleId":"956","replacedBy":"974"},{"ruleId":"958","replacedBy":"975"},{"ruleId":"956","replacedBy":"976"},{"ruleId":"958","replacedBy":"977"},{"ruleId":"956","replacedBy":"978"},{"ruleId":"958","replacedBy":"979"},{"ruleId":"956","replacedBy":"980"},{"ruleId":"958","replacedBy":"981"},{"ruleId":"956","replacedBy":"982"},{"ruleId":"958","replacedBy":"983"},{"ruleId":"956","replacedBy":"984"},{"ruleId":"958","replacedBy":"985"},{"ruleId":"956","replacedBy":"986"},{"ruleId":"958","replacedBy":"987"},{"ruleId":"968","severity":1,"message":"988","line":17,"column":10,"nodeType":"970","messageId":"971","endLine":17,"endColumn":17},{"ruleId":"968","severity":1,"message":"989","line":18,"column":10,"nodeType":"970","messageId":"971","endLine":18,"endColumn":24},{"ruleId":"990","severity":1,"message":"991","line":70,"column":6,"nodeType":"992","endLine":70,"endColumn":20,"suggestions":"993"},{"ruleId":"994","severity":1,"message":"995","line":3,"column":1,"nodeType":"996","endLine":144,"endColumn":3},{"ruleId":"956","replacedBy":"997"},{"ruleId":"958","replacedBy":"998"},{"ruleId":"994","severity":1,"message":"995","line":1,"column":1,"nodeType":"996","endLine":27,"endColumn":3},{"ruleId":"956","replacedBy":"999"},{"ruleId":"958","replacedBy":"1000"},{"ruleId":"956","replacedBy":"1001"},{"ruleId":"958","replacedBy":"1002"},{"ruleId":"956","replacedBy":"1003"},{"ruleId":"958","replacedBy":"1004"},{"ruleId":"994","severity":1,"message":"1005","line":1,"column":1,"nodeType":"996","endLine":35,"endColumn":3},{"ruleId":"956","replacedBy":"1006"},{"ruleId":"958","replacedBy":"1007"},{"ruleId":"956","replacedBy":"1008"},{"ruleId":"958","replacedBy":"1009"},{"ruleId":"994","severity":1,"message":"1010","line":1,"column":1,"nodeType":"996","endLine":6,"endColumn":13},{"ruleId":"968","severity":1,"message":"1011","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":9},{"ruleId":"968","severity":1,"message":"1012","line":14,"column":3,"nodeType":"970","messageId":"971","endLine":14,"endColumn":11},{"ruleId":"968","severity":1,"message":"1013","line":17,"column":18,"nodeType":"970","messageId":"971","endLine":17,"endColumn":33},{"ruleId":"968","severity":1,"message":"1014","line":19,"column":11,"nodeType":"970","messageId":"971","endLine":19,"endColumn":19},{"ruleId":"968","severity":1,"message":"1015","line":22,"column":11,"nodeType":"970","messageId":"971","endLine":22,"endColumn":19},{"ruleId":"968","severity":1,"message":"1016","line":23,"column":15,"nodeType":"970","messageId":"971","endLine":23,"endColumn":27},{"ruleId":"968","severity":1,"message":"1017","line":26,"column":13,"nodeType":"970","messageId":"971","endLine":26,"endColumn":23},{"ruleId":"990","severity":1,"message":"991","line":150,"column":6,"nodeType":"992","endLine":150,"endColumn":20,"suggestions":"1018"},{"ruleId":"994","severity":1,"message":"995","line":3,"column":1,"nodeType":"996","endLine":52,"endColumn":3},{"ruleId":"968","severity":1,"message":"1019","line":25,"column":24,"nodeType":"970","messageId":"971","endLine":25,"endColumn":29},{"ruleId":"990","severity":1,"message":"991","line":186,"column":6,"nodeType":"992","endLine":186,"endColumn":27,"suggestions":"1020"},{"ruleId":"990","severity":1,"message":"991","line":192,"column":5,"nodeType":"992","endLine":192,"endColumn":21,"suggestions":"1021"},{"ruleId":"956","replacedBy":"1022"},{"ruleId":"958","replacedBy":"1023"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1025","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":17},{"ruleId":"968","severity":1,"message":"1026","line":25,"column":10,"nodeType":"970","messageId":"971","endLine":25,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":26,"column":20,"nodeType":"970","messageId":"971","endLine":26,"endColumn":31},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1035","line":34,"column":9,"nodeType":"970","messageId":"971","endLine":34,"endColumn":20},{"ruleId":"968","severity":1,"message":"1036","line":34,"column":22,"nodeType":"970","messageId":"971","endLine":34,"endColumn":36},{"ruleId":"968","severity":1,"message":"1037","line":4,"column":8,"nodeType":"970","messageId":"971","endLine":4,"endColumn":14},{"ruleId":"968","severity":1,"message":"972","line":17,"column":7,"nodeType":"970","messageId":"971","endLine":17,"endColumn":11},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":41,"endColumn":2},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":65,"endColumn":2},{"ruleId":"990","severity":1,"message":"991","line":178,"column":6,"nodeType":"992","endLine":178,"endColumn":27,"suggestions":"1038"},{"ruleId":"990","severity":1,"message":"991","line":184,"column":5,"nodeType":"992","endLine":184,"endColumn":21,"suggestions":"1039"},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1040","line":18,"column":10,"nodeType":"970","messageId":"971","endLine":18,"endColumn":22},{"ruleId":"968","severity":1,"message":"1041","line":20,"column":8,"nodeType":"970","messageId":"971","endLine":20,"endColumn":13},{"ruleId":"968","severity":1,"message":"1042","line":21,"column":9,"nodeType":"970","messageId":"971","endLine":21,"endColumn":20},{"ruleId":"990","severity":1,"message":"1043","line":105,"column":5,"nodeType":"992","endLine":105,"endColumn":21,"suggestions":"1044"},{"ruleId":"968","severity":1,"message":"1041","line":11,"column":8,"nodeType":"970","messageId":"971","endLine":11,"endColumn":13},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":35,"endColumn":2},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"990","severity":1,"message":"991","line":181,"column":6,"nodeType":"992","endLine":181,"endColumn":27,"suggestions":"1046"},{"ruleId":"990","severity":1,"message":"991","line":187,"column":5,"nodeType":"992","endLine":187,"endColumn":21,"suggestions":"1047"},{"ruleId":"968","severity":1,"message":"1048","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":6},{"ruleId":"990","severity":1,"message":"1043","line":83,"column":5,"nodeType":"992","endLine":83,"endColumn":21,"suggestions":"1049"},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"990","severity":1,"message":"1050","line":179,"column":6,"nodeType":"992","endLine":179,"endColumn":27,"suggestions":"1051"},{"ruleId":"990","severity":1,"message":"991","line":185,"column":5,"nodeType":"992","endLine":185,"endColumn":21,"suggestions":"1052"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":25,"column":10,"nodeType":"970","messageId":"971","endLine":25,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":26,"column":20,"nodeType":"970","messageId":"971","endLine":26,"endColumn":31},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1053","line":16,"column":24,"nodeType":"970","messageId":"971","endLine":16,"endColumn":33},{"ruleId":"968","severity":1,"message":"1026","line":23,"column":10,"nodeType":"970","messageId":"971","endLine":23,"endColumn":18},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":56,"endColumn":2},{"ruleId":"956","replacedBy":"1054"},{"ruleId":"958","replacedBy":"1055"},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"990","severity":1,"message":"1056","line":174,"column":6,"nodeType":"992","endLine":174,"endColumn":27,"suggestions":"1057"},{"ruleId":"990","severity":1,"message":"991","line":180,"column":5,"nodeType":"992","endLine":180,"endColumn":21,"suggestions":"1058"},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":56,"endColumn":2},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"956","replacedBy":"1059"},{"ruleId":"958","replacedBy":"1060"},{"ruleId":"968","severity":1,"message":"1026","line":26,"column":10,"nodeType":"970","messageId":"971","endLine":26,"endColumn":18},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":65,"endColumn":2},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":18,"endColumn":2},{"ruleId":"990","severity":1,"message":"991","line":180,"column":6,"nodeType":"992","endLine":180,"endColumn":27,"suggestions":"1061"},{"ruleId":"990","severity":1,"message":"991","line":186,"column":5,"nodeType":"992","endLine":186,"endColumn":21,"suggestions":"1062"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":25,"column":10,"nodeType":"970","messageId":"971","endLine":25,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":26,"column":20,"nodeType":"970","messageId":"971","endLine":26,"endColumn":31},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"990","severity":1,"message":"1063","line":70,"column":6,"nodeType":"992","endLine":70,"endColumn":8,"suggestions":"1064"},{"ruleId":"990","severity":1,"message":"991","line":76,"column":6,"nodeType":"992","endLine":76,"endColumn":20,"suggestions":"1065"},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":65,"endColumn":2},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":26,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1066","line":10,"column":8,"nodeType":"970","messageId":"971","endLine":10,"endColumn":24},{"ruleId":"968","severity":1,"message":"1026","line":23,"column":10,"nodeType":"970","messageId":"971","endLine":23,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":23,"column":20,"nodeType":"970","messageId":"971","endLine":23,"endColumn":31},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":56,"endColumn":2},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"968","severity":1,"message":"1067","line":22,"column":23,"nodeType":"970","messageId":"971","endLine":22,"endColumn":34},{"ruleId":"990","severity":1,"message":"1068","line":174,"column":6,"nodeType":"992","endLine":174,"endColumn":27,"suggestions":"1069"},{"ruleId":"990","severity":1,"message":"991","line":180,"column":5,"nodeType":"992","endLine":180,"endColumn":21,"suggestions":"1070"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":22,"column":10,"nodeType":"970","messageId":"971","endLine":22,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":22,"column":20,"nodeType":"970","messageId":"971","endLine":22,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":23,"column":20,"nodeType":"970","messageId":"971","endLine":23,"endColumn":31},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1053","line":16,"column":24,"nodeType":"970","messageId":"971","endLine":16,"endColumn":33},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1053","line":16,"column":24,"nodeType":"970","messageId":"971","endLine":16,"endColumn":33},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"956","replacedBy":"1071"},{"ruleId":"958","replacedBy":"1072"},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1073","line":38,"column":18,"nodeType":"970","messageId":"971","endLine":38,"endColumn":27},{"ruleId":"990","severity":1,"message":"991","line":67,"column":5,"nodeType":"992","endLine":67,"endColumn":21,"suggestions":"1074"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":25,"column":10,"nodeType":"970","messageId":"971","endLine":25,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"990","severity":1,"message":"991","line":180,"column":6,"nodeType":"992","endLine":180,"endColumn":27,"suggestions":"1075"},{"ruleId":"990","severity":1,"message":"991","line":186,"column":5,"nodeType":"992","endLine":186,"endColumn":21,"suggestions":"1076"},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":26,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1077","line":10,"column":8,"nodeType":"970","messageId":"971","endLine":10,"endColumn":23},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1078","line":26,"column":9,"nodeType":"970","messageId":"971","endLine":26,"endColumn":20},{"ruleId":"968","severity":1,"message":"1079","line":26,"column":22,"nodeType":"970","messageId":"971","endLine":26,"endColumn":36},{"ruleId":"994","severity":1,"message":"1005","line":7,"column":1,"nodeType":"996","endLine":96,"endColumn":2},{"ruleId":"968","severity":1,"message":"1048","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":6},{"ruleId":"968","severity":1,"message":"1080","line":17,"column":3,"nodeType":"970","messageId":"971","endLine":17,"endColumn":9},{"ruleId":"968","severity":1,"message":"1081","line":18,"column":3,"nodeType":"970","messageId":"971","endLine":18,"endColumn":13},{"ruleId":"968","severity":1,"message":"1037","line":25,"column":8,"nodeType":"970","messageId":"971","endLine":25,"endColumn":14},{"ruleId":"968","severity":1,"message":"1082","line":44,"column":10,"nodeType":"970","messageId":"971","endLine":44,"endColumn":20},{"ruleId":"968","severity":1,"message":"1083","line":44,"column":22,"nodeType":"970","messageId":"971","endLine":44,"endColumn":35},{"ruleId":"968","severity":1,"message":"1084","line":45,"column":10,"nodeType":"970","messageId":"971","endLine":45,"endColumn":20},{"ruleId":"968","severity":1,"message":"1085","line":45,"column":22,"nodeType":"970","messageId":"971","endLine":45,"endColumn":35},{"ruleId":"968","severity":1,"message":"1086","line":46,"column":10,"nodeType":"970","messageId":"971","endLine":46,"endColumn":20},{"ruleId":"968","severity":1,"message":"1087","line":46,"column":22,"nodeType":"970","messageId":"971","endLine":46,"endColumn":35},{"ruleId":"990","severity":1,"message":"1088","line":91,"column":5,"nodeType":"992","endLine":91,"endColumn":7,"suggestions":"1089"},{"ruleId":"968","severity":1,"message":"1029","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":7},{"ruleId":"968","severity":1,"message":"1030","line":8,"column":3,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1053","line":16,"column":24,"nodeType":"970","messageId":"971","endLine":16,"endColumn":33},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"968","severity":1,"message":"1090","line":22,"column":15,"nodeType":"970","messageId":"971","endLine":22,"endColumn":21},{"ruleId":"968","severity":1,"message":"1067","line":22,"column":23,"nodeType":"970","messageId":"971","endLine":22,"endColumn":34},{"ruleId":"968","severity":1,"message":"1040","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":22},{"ruleId":"968","severity":1,"message":"1073","line":53,"column":18,"nodeType":"970","messageId":"971","endLine":53,"endColumn":27},{"ruleId":"990","severity":1,"message":"1091","line":137,"column":6,"nodeType":"992","endLine":137,"endColumn":27,"suggestions":"1092"},{"ruleId":"990","severity":1,"message":"991","line":143,"column":5,"nodeType":"992","endLine":143,"endColumn":21,"suggestions":"1093"},{"ruleId":"968","severity":1,"message":"1053","line":2,"column":23,"nodeType":"970","messageId":"971","endLine":2,"endColumn":32},{"ruleId":"968","severity":1,"message":"1048","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":6},{"ruleId":"990","severity":1,"message":"1094","line":132,"column":5,"nodeType":"992","endLine":132,"endColumn":13,"suggestions":"1095"},{"ruleId":"990","severity":1,"message":"1096","line":169,"column":6,"nodeType":"992","endLine":169,"endColumn":15,"suggestions":"1097"},{"ruleId":"990","severity":1,"message":"991","line":205,"column":6,"nodeType":"992","endLine":205,"endColumn":24,"suggestions":"1098"},{"ruleId":"1099","severity":1,"message":"1100","line":215,"column":50,"nodeType":"1101","messageId":"1102","endLine":215,"endColumn":96},{"ruleId":"990","severity":1,"message":"1103","line":230,"column":6,"nodeType":"992","endLine":230,"endColumn":22,"suggestions":"1104"},{"ruleId":"968","severity":1,"message":"1105","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":24},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":26,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":19,"endColumn":2},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":26,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1026","line":22,"column":10,"nodeType":"970","messageId":"971","endLine":22,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":22,"column":20,"nodeType":"970","messageId":"971","endLine":22,"endColumn":31},{"ruleId":"968","severity":1,"message":"1078","line":24,"column":9,"nodeType":"970","messageId":"971","endLine":24,"endColumn":20},{"ruleId":"968","severity":1,"message":"1079","line":24,"column":22,"nodeType":"970","messageId":"971","endLine":24,"endColumn":36},{"ruleId":"968","severity":1,"message":"1106","line":97,"column":10,"nodeType":"970","messageId":"971","endLine":97,"endColumn":24},{"ruleId":"968","severity":1,"message":"1107","line":97,"column":26,"nodeType":"970","messageId":"971","endLine":97,"endColumn":43},{"ruleId":"990","severity":1,"message":"991","line":196,"column":6,"nodeType":"992","endLine":196,"endColumn":26,"suggestions":"1108"},{"ruleId":"990","severity":1,"message":"991","line":227,"column":6,"nodeType":"992","endLine":227,"endColumn":16,"suggestions":"1109"},{"ruleId":"990","severity":1,"message":"1110","line":256,"column":5,"nodeType":"992","endLine":256,"endColumn":15,"suggestions":"1111"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"994","severity":1,"message":"1005","line":7,"column":1,"nodeType":"996","endLine":50,"endColumn":2},{"ruleId":"968","severity":1,"message":"1105","line":1,"column":16,"nodeType":"970","messageId":"971","endLine":1,"endColumn":24},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":26,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1112","line":21,"column":8,"nodeType":"970","messageId":"971","endLine":21,"endColumn":17},{"ruleId":"990","severity":1,"message":"991","line":75,"column":5,"nodeType":"992","endLine":75,"endColumn":7,"suggestions":"1113"},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"968","severity":1,"message":"1114","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":11},{"ruleId":"968","severity":1,"message":"1115","line":21,"column":9,"nodeType":"970","messageId":"971","endLine":21,"endColumn":13},{"ruleId":"968","severity":1,"message":"1116","line":21,"column":24,"nodeType":"970","messageId":"971","endLine":21,"endColumn":31},{"ruleId":"968","severity":1,"message":"1117","line":21,"column":41,"nodeType":"970","messageId":"971","endLine":21,"endColumn":54},{"ruleId":"968","severity":1,"message":"1118","line":21,"column":56,"nodeType":"970","messageId":"971","endLine":21,"endColumn":70},{"ruleId":"968","severity":1,"message":"1119","line":21,"column":72,"nodeType":"970","messageId":"971","endLine":21,"endColumn":85},{"ruleId":"968","severity":1,"message":"1040","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":22},{"ruleId":"968","severity":1,"message":"1053","line":26,"column":9,"nodeType":"970","messageId":"971","endLine":26,"endColumn":18},{"ruleId":"968","severity":1,"message":"1073","line":51,"column":18,"nodeType":"970","messageId":"971","endLine":51,"endColumn":27},{"ruleId":"968","severity":1,"message":"1087","line":52,"column":22,"nodeType":"970","messageId":"971","endLine":52,"endColumn":35},{"ruleId":"990","severity":1,"message":"1120","line":110,"column":6,"nodeType":"992","endLine":110,"endColumn":27,"suggestions":"1121"},{"ruleId":"990","severity":1,"message":"991","line":116,"column":5,"nodeType":"992","endLine":116,"endColumn":21,"suggestions":"1122"},{"ruleId":"994","severity":1,"message":"1005","line":10,"column":1,"nodeType":"996","endLine":86,"endColumn":2},{"ruleId":"968","severity":1,"message":"1048","line":5,"column":3,"nodeType":"970","messageId":"971","endLine":5,"endColumn":6},{"ruleId":"968","severity":1,"message":"1031","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":12},{"ruleId":"968","severity":1,"message":"1032","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":17},{"ruleId":"968","severity":1,"message":"1033","line":11,"column":3,"nodeType":"970","messageId":"971","endLine":11,"endColumn":10},{"ruleId":"968","severity":1,"message":"1034","line":15,"column":20,"nodeType":"970","messageId":"971","endLine":15,"endColumn":30},{"ruleId":"968","severity":1,"message":"1053","line":16,"column":24,"nodeType":"970","messageId":"971","endLine":16,"endColumn":33},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":24,"column":10,"nodeType":"970","messageId":"971","endLine":24,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"994","severity":1,"message":"995","line":1,"column":1,"nodeType":"996","endLine":30,"endColumn":3},{"ruleId":"968","severity":1,"message":"1123","line":63,"column":10,"nodeType":"970","messageId":"971","endLine":63,"endColumn":25},{"ruleId":"968","severity":1,"message":"1124","line":63,"column":27,"nodeType":"970","messageId":"971","endLine":63,"endColumn":45},{"ruleId":"968","severity":1,"message":"1125","line":65,"column":18,"nodeType":"970","messageId":"971","endLine":65,"endColumn":27},{"ruleId":"968","severity":1,"message":"1126","line":96,"column":9,"nodeType":"970","messageId":"971","endLine":96,"endColumn":21},{"ruleId":"968","severity":1,"message":"1127","line":97,"column":9,"nodeType":"970","messageId":"971","endLine":97,"endColumn":33},{"ruleId":"990","severity":1,"message":"991","line":118,"column":6,"nodeType":"992","endLine":118,"endColumn":8,"suggestions":"1128"},{"ruleId":"990","severity":1,"message":"991","line":143,"column":6,"nodeType":"992","endLine":143,"endColumn":30,"suggestions":"1129"},{"ruleId":"990","severity":1,"message":"991","line":164,"column":6,"nodeType":"992","endLine":164,"endColumn":23,"suggestions":"1130"},{"ruleId":"990","severity":1,"message":"991","line":185,"column":6,"nodeType":"992","endLine":185,"endColumn":22,"suggestions":"1131"},{"ruleId":"990","severity":1,"message":"991","line":207,"column":6,"nodeType":"992","endLine":207,"endColumn":22,"suggestions":"1132"},{"ruleId":"990","severity":1,"message":"991","line":244,"column":6,"nodeType":"992","endLine":244,"endColumn":22,"suggestions":"1133"},{"ruleId":"1134","severity":1,"message":"1135","line":291,"column":15,"nodeType":"1136","messageId":"1137","endLine":291,"endColumn":26},{"ruleId":"1134","severity":1,"message":"1135","line":293,"column":19,"nodeType":"1136","messageId":"1137","endLine":293,"endColumn":30},{"ruleId":"968","severity":1,"message":"1045","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":9},{"ruleId":"968","severity":1,"message":"1114","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":11},{"ruleId":"968","severity":1,"message":"1138","line":14,"column":3,"nodeType":"970","messageId":"971","endLine":14,"endColumn":18},{"ruleId":"968","severity":1,"message":"1139","line":24,"column":3,"nodeType":"970","messageId":"971","endLine":24,"endColumn":7},{"ruleId":"968","severity":1,"message":"1040","line":29,"column":10,"nodeType":"970","messageId":"971","endLine":29,"endColumn":22},{"ruleId":"968","severity":1,"message":"1053","line":31,"column":9,"nodeType":"970","messageId":"971","endLine":31,"endColumn":18},{"ruleId":"968","severity":1,"message":"1140","line":48,"column":10,"nodeType":"970","messageId":"971","endLine":48,"endColumn":15},{"ruleId":"968","severity":1,"message":"1141","line":48,"column":17,"nodeType":"970","messageId":"971","endLine":48,"endColumn":25},{"ruleId":"968","severity":1,"message":"1142","line":49,"column":10,"nodeType":"970","messageId":"971","endLine":49,"endColumn":14},{"ruleId":"968","severity":1,"message":"1143","line":49,"column":16,"nodeType":"970","messageId":"971","endLine":49,"endColumn":23},{"ruleId":"968","severity":1,"message":"1144","line":54,"column":10,"nodeType":"970","messageId":"971","endLine":54,"endColumn":16},{"ruleId":"968","severity":1,"message":"1073","line":54,"column":18,"nodeType":"970","messageId":"971","endLine":54,"endColumn":27},{"ruleId":"968","severity":1,"message":"1145","line":72,"column":9,"nodeType":"970","messageId":"971","endLine":72,"endColumn":24},{"ruleId":"990","severity":1,"message":"1146","line":98,"column":6,"nodeType":"992","endLine":98,"endColumn":8,"suggestions":"1147"},{"ruleId":"990","severity":1,"message":"1091","line":119,"column":6,"nodeType":"992","endLine":119,"endColumn":13,"suggestions":"1148"},{"ruleId":"990","severity":1,"message":"991","line":125,"column":5,"nodeType":"992","endLine":125,"endColumn":21,"suggestions":"1149"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":23,"column":10,"nodeType":"970","messageId":"971","endLine":23,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":23,"column":20,"nodeType":"970","messageId":"971","endLine":23,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1045","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":9},{"ruleId":"968","severity":1,"message":"1114","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":11},{"ruleId":"968","severity":1,"message":"1138","line":15,"column":3,"nodeType":"970","messageId":"971","endLine":15,"endColumn":18},{"ruleId":"968","severity":1,"message":"1150","line":19,"column":3,"nodeType":"970","messageId":"971","endLine":19,"endColumn":13},{"ruleId":"968","severity":1,"message":"1151","line":28,"column":9,"nodeType":"970","messageId":"971","endLine":28,"endColumn":13},{"ruleId":"968","severity":1,"message":"1152","line":28,"column":15,"nodeType":"970","messageId":"971","endLine":28,"endColumn":33},{"ruleId":"968","severity":1,"message":"1040","line":30,"column":10,"nodeType":"970","messageId":"971","endLine":30,"endColumn":22},{"ruleId":"968","severity":1,"message":"1053","line":32,"column":9,"nodeType":"970","messageId":"971","endLine":32,"endColumn":18},{"ruleId":"968","severity":1,"message":"1140","line":49,"column":10,"nodeType":"970","messageId":"971","endLine":49,"endColumn":15},{"ruleId":"968","severity":1,"message":"1141","line":49,"column":17,"nodeType":"970","messageId":"971","endLine":49,"endColumn":25},{"ruleId":"968","severity":1,"message":"1142","line":50,"column":10,"nodeType":"970","messageId":"971","endLine":50,"endColumn":14},{"ruleId":"968","severity":1,"message":"1143","line":50,"column":16,"nodeType":"970","messageId":"971","endLine":50,"endColumn":23},{"ruleId":"968","severity":1,"message":"1144","line":55,"column":10,"nodeType":"970","messageId":"971","endLine":55,"endColumn":16},{"ruleId":"968","severity":1,"message":"1073","line":55,"column":18,"nodeType":"970","messageId":"971","endLine":55,"endColumn":27},{"ruleId":"990","severity":1,"message":"1146","line":88,"column":6,"nodeType":"992","endLine":88,"endColumn":8,"suggestions":"1153"},{"ruleId":"990","severity":1,"message":"1091","line":109,"column":6,"nodeType":"992","endLine":109,"endColumn":13,"suggestions":"1154"},{"ruleId":"990","severity":1,"message":"991","line":117,"column":5,"nodeType":"992","endLine":117,"endColumn":21,"suggestions":"1155"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":25,"column":10,"nodeType":"970","messageId":"971","endLine":25,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":25,"column":20,"nodeType":"970","messageId":"971","endLine":25,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":26,"column":20,"nodeType":"970","messageId":"971","endLine":26,"endColumn":31},{"ruleId":"994","severity":1,"message":"1005","line":7,"column":1,"nodeType":"996","endLine":56,"endColumn":2},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1026","line":23,"column":10,"nodeType":"970","messageId":"971","endLine":23,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":23,"column":20,"nodeType":"970","messageId":"971","endLine":23,"endColumn":31},{"ruleId":"968","severity":1,"message":"1028","line":24,"column":20,"nodeType":"970","messageId":"971","endLine":24,"endColumn":31},{"ruleId":"968","severity":1,"message":"1053","line":2,"column":23,"nodeType":"970","messageId":"971","endLine":2,"endColumn":32},{"ruleId":"968","severity":1,"message":"1048","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":6},{"ruleId":"968","severity":1,"message":"1156","line":24,"column":8,"nodeType":"970","messageId":"971","endLine":24,"endColumn":19},{"ruleId":"968","severity":1,"message":"1157","line":29,"column":8,"nodeType":"970","messageId":"971","endLine":29,"endColumn":12},{"ruleId":"968","severity":1,"message":"1158","line":60,"column":10,"nodeType":"970","messageId":"971","endLine":60,"endColumn":22},{"ruleId":"968","severity":1,"message":"1159","line":61,"column":19,"nodeType":"970","messageId":"971","endLine":61,"endColumn":29},{"ruleId":"990","severity":1,"message":"991","line":206,"column":6,"nodeType":"992","endLine":206,"endColumn":26,"suggestions":"1160"},{"ruleId":"990","severity":1,"message":"991","line":242,"column":6,"nodeType":"992","endLine":242,"endColumn":24,"suggestions":"1161"},{"ruleId":"1099","severity":1,"message":"1100","line":252,"column":50,"nodeType":"1101","messageId":"1102","endLine":252,"endColumn":96},{"ruleId":"990","severity":1,"message":"1103","line":267,"column":6,"nodeType":"992","endLine":267,"endColumn":22,"suggestions":"1162"},{"ruleId":"968","severity":1,"message":"1024","line":1,"column":26,"nodeType":"970","messageId":"971","endLine":1,"endColumn":35},{"ruleId":"968","severity":1,"message":"1026","line":22,"column":10,"nodeType":"970","messageId":"971","endLine":22,"endColumn":18},{"ruleId":"968","severity":1,"message":"1027","line":22,"column":20,"nodeType":"970","messageId":"971","endLine":22,"endColumn":31},{"ruleId":"968","severity":1,"message":"1078","line":24,"column":9,"nodeType":"970","messageId":"971","endLine":24,"endColumn":20},{"ruleId":"968","severity":1,"message":"1079","line":24,"column":22,"nodeType":"970","messageId":"971","endLine":24,"endColumn":36},"no-native-reassign",["1163"],"no-negated-in-lhs",["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'usuario' is assigned a value but never used.",["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],"'invalid' is defined but never used.","'CornerDownLeft' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["1165"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],["1163"],["1164"],"Assign object to a variable before exporting as module default",["1163"],["1164"],["1163"],["1164"],"Assign arrow function to a variable before exporting as module default","'Button' is defined but never used.","'ListItem' is defined but never used.","'AlertCircleIcon' is defined but never used.","'LockIcon' is defined but never used.","'UserIcon' is defined but never used.","'UserPlusIcon' is defined but never used.","'LogoutIcon' is defined but never used.",["1166"],"'alert' is defined but never used.",["1167"],["1168"],["1163"],["1164"],"'useEffect' is defined but never used.","'LinearProgress' is defined but never used.","'errorMsg' is assigned a value but never used.","'setErrorMsg' is assigned a value but never used.","'setPageable' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'SvgIcon' is defined but never used.","'SearchIcon' is defined but never used.","'paramUserId' is assigned a value but never used.","'setParamUserId' is assigned a value but never used.","'moment' is defined but never used.",["1169"],["1170"],"'confirmAlert' is defined but never used.","'axios' is defined but never used.","'MaskedInput' is defined but never used.","React Hook useEffect has missing dependencies: 'values.cep', 'values.complemento', 'values.documento', 'values.fantasia', 'values.fone1', 'values.fone2', 'values.id', 'values.ie', 'values.numero', and 'values.razaoSocial'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setValues' needs the current value of 'values.id'.",["1171"],"'Avatar' is defined but never used.",["1172"],["1173"],"'Box' is defined but never used.",["1174"],"React Hook useEffect has a missing dependency: 'clienteId'. Either include it or remove the dependency array.",["1175"],["1176"],"'useParams' is defined but never used.",["1163"],["1164"],"React Hook useEffect has a missing dependency: 'unidadeId'. Either include it or remove the dependency array.",["1177"],["1178"],["1163"],["1164"],["1179"],["1180"],"React Hook useEffect has a missing dependency: 'tipoDieta'. Either include it or remove the dependency array.",["1181"],["1182"],"'TipoDietaService' is defined but never used.","'AccountTree' is defined but never used.","React Hook useEffect has a missing dependency: 'tipoDietaId'. Either include it or remove the dependency array.",["1183"],["1184"],["1163"],["1164"],"'setReload' is assigned a value but never used.",["1185"],["1186"],["1187"],"'ContratoService' is defined but never used.","'contratoSel' is assigned a value but never used.","'setContratoSel' is assigned a value but never used.","'Switch' is defined but never used.","'Typography' is defined but never used.","'clienteSel' is assigned a value but never used.","'setClienteSel' is assigned a value but never used.","'unidadeSel' is assigned a value but never used.","'setUnidadeSel' is assigned a value but never used.","'clinicaSel' is assigned a value but never used.","'setClinicaSel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cookies.mapaClienteSel', 'cookies.mapaClinicaSel', 'cookies.mapaUnidadeSel', and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["1188"],"'Delete' is defined but never used.","React Hook useEffect has a missing dependency: 'clinicaId'. Either include it or remove the dependency array.",["1189"],["1190"],"React Hook useEffect has a missing dependency: 'clinicaId'. Either include it or remove the dependency array. If 'setValues' needs the current value of 'clinicaId', you can also switch to useReducer instead of useState and read 'clinicaId' in the reducer.",["1191"],"React Hook useEffect has missing dependencies: 'clinicaId' and 'navigate'. Either include them or remove the dependency array. If 'setValues' needs the current value of 'clinicaId', you can also switch to useReducer instead of useState and read 'clinicaId' in the reducer.",["1192"],["1193"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'mapaSel.tiposDietaComplementar'. Either include it or remove the dependency array.",["1194"],"'useState' is defined but never used.","'reloadUnidades' is assigned a value but never used.","'setReloadUnidades' is assigned a value but never used.",["1195"],["1196"],"React Hook useEffect has missing dependencies: 'contratoId' and 'navigate'. Either include them or remove the dependency array.",["1197"],"'refeicoes' is defined but never used.",["1198"],"'Checkbox' is defined but never used.","'List' is defined but never used.","'Details' is defined but never used.","'SearchRounded' is defined but never used.","'SearchOutlined' is defined but never used.","'SearchTwoTone' is defined but never used.","React Hook useEffect has missing dependencies: 'clinicaId', 'contratoId', 'dataReferencia', and 'unidadeId'. Either include them or remove the dependency array.",["1199"],["1200"],"'invalidateToken' is assigned a value but never used.","'setInvalidateToken' is assigned a value but never used.","'setValues' is assigned a value but never used.","'mapTipoDieta' is assigned a value but never used.","'mapTipoDietaComplementar' is assigned a value but never used.",["1201"],["1202"],["1203"],["1204"],["1205"],["1206"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'TablePagination' is defined but never used.","'Icon' is defined but never used.","'limit' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'reload' is assigned a value but never used.","'handleAlterMapa' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'solicitacaoId'. Either include it or remove the dependency array.",["1207"],["1208"],["1209"],"'IconButton' is defined but never used.","'Edit' is defined but never used.","'FormatListNumbered' is defined but never used.",["1210"],["1211"],["1212"],"'MapaService' is defined but never used.","'data' is defined but never used.","'invalidToken' is assigned a value but never used.","'setMapaSel' is assigned a value but never used.",["1213"],["1214"],["1215"],"no-global-assign","no-unsafe-negation",{"desc":"1216","fix":"1217"},{"desc":"1216","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1219","fix":"1223"},{"desc":"1221","fix":"1224"},{"desc":"1225","fix":"1226"},{"desc":"1219","fix":"1227"},{"desc":"1221","fix":"1228"},{"desc":"1225","fix":"1229"},{"desc":"1230","fix":"1231"},{"desc":"1221","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1221","fix":"1235"},{"desc":"1219","fix":"1236"},{"desc":"1221","fix":"1237"},{"desc":"1238","fix":"1239"},{"desc":"1216","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1221","fix":"1243"},{"desc":"1221","fix":"1244"},{"desc":"1219","fix":"1245"},{"desc":"1221","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1249","fix":"1250"},{"desc":"1221","fix":"1251"},{"desc":"1252","fix":"1253"},{"desc":"1254","fix":"1255"},{"desc":"1256","fix":"1257"},{"desc":"1258","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1262","fix":"1263"},{"desc":"1264","fix":"1265"},{"desc":"1266","fix":"1267"},{"desc":"1268","fix":"1269"},{"desc":"1221","fix":"1270"},{"desc":"1266","fix":"1271"},{"desc":"1272","fix":"1273"},{"desc":"1274","fix":"1275"},{"desc":"1276","fix":"1277"},{"desc":"1278","fix":"1279"},{"desc":"1280","fix":"1281"},{"desc":"1282","fix":"1283"},{"desc":"1284","fix":"1285"},{"desc":"1221","fix":"1286"},{"desc":"1282","fix":"1287"},{"desc":"1284","fix":"1288"},{"desc":"1221","fix":"1289"},{"desc":"1290","fix":"1291"},{"desc":"1256","fix":"1292"},{"desc":"1258","fix":"1293"},"Update the dependencies array to be: [invalidToken, navigate]",{"range":"1294","text":"1295"},{"range":"1296","text":"1295"},"Update the dependencies array to be: [page, limit, reload, navigate]",{"range":"1297","text":"1298"},"Update the dependencies array to be: [isTokenExpired, navigate]",{"range":"1299","text":"1300"},{"range":"1301","text":"1298"},{"range":"1302","text":"1300"},"Update the dependencies array to be: [enderecoPorCep, values.cep, values.complemento, values.documento, values.fantasia, values.fone1, values.fone2, values.id, values.ie, values.numero, values.razaoSocial]",{"range":"1303","text":"1304"},{"range":"1305","text":"1298"},{"range":"1306","text":"1300"},{"range":"1307","text":"1304"},"Update the dependencies array to be: [page, limit, reload, clienteId]",{"range":"1308","text":"1309"},{"range":"1310","text":"1300"},"Update the dependencies array to be: [page, limit, reload, unidadeId]",{"range":"1311","text":"1312"},{"range":"1313","text":"1300"},{"range":"1314","text":"1298"},{"range":"1315","text":"1300"},"Update the dependencies array to be: [tipoDieta]",{"range":"1316","text":"1317"},{"range":"1318","text":"1295"},"Update the dependencies array to be: [page, limit, reload, tipoDietaId]",{"range":"1319","text":"1320"},{"range":"1321","text":"1300"},{"range":"1322","text":"1300"},{"range":"1323","text":"1298"},{"range":"1324","text":"1300"},"Update the dependencies array to be: [cookies.mapaClienteSel, cookies.mapaClinicaSel, cookies.mapaUnidadeSel, values]",{"range":"1325","text":"1326"},"Update the dependencies array to be: [page, limit, reload, clinicaId]",{"range":"1327","text":"1328"},{"range":"1329","text":"1300"},"Update the dependencies array to be: [clinicaId, mapaId]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [clinicaId, mapaSel, navigate]",{"range":"1332","text":"1333"},"Update the dependencies array to be: [navigate, values.tipoDieta]",{"range":"1334","text":"1335"},"Update the dependencies array to be: [mapaSel.tiposDietaComplementar, tiposDietaComp]",{"range":"1336","text":"1337"},"Update the dependencies array to be: [contratoId, navigate, reload]",{"range":"1338","text":"1339"},"Update the dependencies array to be: [contrato, navigate]",{"range":"1340","text":"1341"},"Update the dependencies array to be: [contrato, contratoId, navigate]",{"range":"1342","text":"1343"},"Update the dependencies array to be: [navigate]",{"range":"1344","text":"1345"},"Update the dependencies array to be: [page, limit, reload, contratoId, unidadeId, clinicaId, dataReferencia]",{"range":"1346","text":"1347"},{"range":"1348","text":"1300"},{"range":"1349","text":"1345"},"Update the dependencies array to be: [navigate, valuesExtras.tipoDieta]",{"range":"1350","text":"1351"},"Update the dependencies array to be: [navigate, values.contrato]",{"range":"1352","text":"1353"},"Update the dependencies array to be: [navigate, values.unidade]",{"range":"1354","text":"1355"},"Update the dependencies array to be: [navigate, values.clinica]",{"range":"1356","text":"1357"},"Update the dependencies array to be: [dataReferencia, navigate]",{"range":"1358","text":"1359"},"Update the dependencies array to be: [solicitacaoId]",{"range":"1360","text":"1361"},"Update the dependencies array to be: [clinicaId, itens]",{"range":"1362","text":"1363"},{"range":"1364","text":"1300"},{"range":"1365","text":"1361"},{"range":"1366","text":"1363"},{"range":"1367","text":"1300"},"Update the dependencies array to be: [navigate, solicitacaoItemSel]",{"range":"1368","text":"1369"},{"range":"1370","text":"1335"},{"range":"1371","text":"1337"},[1712,1726],"[invalidToken, navigate]",[3036,3050],[4895,4916],"[page, limit, reload, navigate]",[5013,5029],"[isTokenExpired, navigate]",[4824,4845],[4942,4958],[2457,2473],"[enderecoPorCep, values.cep, values.complemento, values.documento, values.fantasia, values.fone1, values.fone2, values.id, values.ie, values.numero, values.razaoSocial]",[4959,4980],[5077,5093],[2156,2172],[4935,4956],"[page, limit, reload, clienteId]",[5053,5069],[4739,4760],"[page, limit, reload, unidadeId]",[4857,4873],[5006,5027],[5124,5140],[1662,1664],"[tipoDieta]",[1760,1774],[5099,5120],"[page, limit, reload, tipoDietaId]",[5217,5233],[1521,1537],[4998,5019],[5116,5132],[2281,2283],"[cookies.mapaClienteSel, cookies.mapaClinicaSel, cookies.mapaUnidadeSel, values]",[3839,3860],"[page, limit, reload, clinicaId]",[3957,3973],[3407,3415],"[clinicaId, mapaId]",[4471,4480],"[clinicaId, mapaSel, navigate]",[5452,5470],"[navigate, values.tipoDieta]",[6196,6212],"[mapaSel.tiposDietaComplementar, tiposDietaComp]",[4512,4532],"[contratoId, navigate, reload]",[5337,5347],"[contrato, navigate]",[6047,6057],"[contrato, contratoId, navigate]",[1996,1998],"[navigate]",[3507,3528],"[page, limit, reload, contratoId, unidadeId, clinicaId, dataReferencia]",[3625,3641],[3355,3357],[4034,4058],"[navigate, valuesExtras.tipoDieta]",[4583,4600],"[navigate, values.contrato]",[5121,5137],"[navigate, values.unidade]",[5693,5709],"[navigate, values.clinica]",[6710,6726],"[dataReferencia, navigate]",[2719,2721],"[solicitacaoId]",[3266,3273],"[clinicaId, itens]",[3369,3385],[2493,2495],[3040,3047],[3146,3162],[5715,5735],"[navigate, solicitacaoItemSel]",[6707,6725],[7451,7467]]